{"version":3,"file":"static/js/893.007344e1.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/culori/src/_prepare.js","../node_modules/culori/src/a98/convertA98ToXyz65.js","../node_modules/culori/src/a98/convertXyz65ToA98.js","../node_modules/culori/src/a98/definition.js","../node_modules/culori/src/average.js","../node_modules/culori/src/colors/named.js","../node_modules/culori/src/converter.js","../node_modules/culori/src/cubehelix/constants.js","../node_modules/culori/src/cubehelix/convertCubehelixToRgb.js","../node_modules/culori/src/cubehelix/convertRgbToCubehelix.js","../node_modules/culori/src/cubehelix/definition.js","../node_modules/culori/src/dlab/definition.js","../node_modules/culori/src/dlch/constants.js","../node_modules/culori/src/dlch/convertDlchToLab65.js","../node_modules/culori/src/dlch/convertLab65ToDlch.js","../node_modules/culori/src/dlch/definition.js","../node_modules/culori/src/fixup/alpha.js","../node_modules/culori/src/fixup/hue.js","../node_modules/culori/src/hsi/convertHsiToRgb.js","../node_modules/culori/src/hsi/convertRgbToHsi.js","../node_modules/culori/src/hsi/definition.js","../node_modules/culori/src/hsl/convertHslToRgb.js","../node_modules/culori/src/hsl/convertRgbToHsl.js","../node_modules/culori/src/hsl/definition.js","../node_modules/culori/src/hsl/parseHsl.js","../node_modules/culori/src/hsv/convertHsvToRgb.js","../node_modules/culori/src/hsv/convertRgbToHsv.js","../node_modules/culori/src/hsv/definition.js","../node_modules/culori/src/hwb/convertHwbToRgb.js","../node_modules/culori/src/hwb/convertRgbToHwb.js","../node_modules/culori/src/hwb/definition.js","../node_modules/culori/src/hwb/parseHwb.js","../node_modules/culori/src/interpolate/lerp.js","../node_modules/culori/src/interpolate/linear.js","../node_modules/culori/src/interpolate/piecewise.js","../node_modules/culori/src/jab/convertJabToRgb.js","../node_modules/culori/src/jab/convertJabToXyz65.js","../node_modules/culori/src/jab/convertRgbToJab.js","../node_modules/culori/src/jab/convertXyz65ToJab.js","../node_modules/culori/src/jab/definition.js","../node_modules/culori/src/jch/convertJabToJch.js","../node_modules/culori/src/jch/convertJchToJab.js","../node_modules/culori/src/jch/definition.js","../node_modules/culori/src/lab65/convertLab65ToRgb.js","../node_modules/culori/src/lab65/convertLab65ToXyz65.js","../node_modules/culori/src/lab65/convertRgbToLab65.js","../node_modules/culori/src/lab65/convertXyz65ToLab65.js","../node_modules/culori/src/lab65/definition.js","../node_modules/culori/src/lab/convertLabToRgb.js","../node_modules/culori/src/lab/convertLabToXyz50.js","../node_modules/culori/src/lab/convertRgbToLab.js","../node_modules/culori/src/lab/convertXyz50ToLab.js","../node_modules/culori/src/lab/definition.js","../node_modules/culori/src/lab/parseLab.js","../node_modules/culori/src/lch65/definition.js","../node_modules/culori/src/lch/convertLabToLch.js","../node_modules/culori/src/lch/convertLchToLab.js","../node_modules/culori/src/lch/definition.js","../node_modules/culori/src/lch/parseLch.js","../node_modules/culori/src/lchuv/convertLchuvToLuv.js","../node_modules/culori/src/lchuv/convertLuvToLchuv.js","../node_modules/culori/src/lchuv/definition.js","../node_modules/culori/src/lrgb/convertLrgbToRgb.js","../node_modules/culori/src/lrgb/convertRgbToLrgb.js","../node_modules/culori/src/lrgb/definition.js","../node_modules/culori/src/luv/convertLuvToXyz50.js","../node_modules/culori/src/luv/convertXyz50ToLuv.js","../node_modules/culori/src/luv/definition.js","../node_modules/culori/src/modes.js","../node_modules/culori/src/okhsl/convertOkhslToOklab.js","../node_modules/culori/src/okhsl/convertOklabToOkhsl.js","../node_modules/culori/src/okhsl/helpers.js","../node_modules/culori/src/okhsl/modeOkhsl.js","../node_modules/culori/src/okhsv/convertOkhsvToOklab.js","../node_modules/culori/src/okhsv/convertOklabToOkhsv.js","../node_modules/culori/src/okhsv/modeOkhsv.js","../node_modules/culori/src/oklab/convertLrgbToOklab.js","../node_modules/culori/src/oklab/convertOklabToLrgb.js","../node_modules/culori/src/oklab/convertOklabToRgb.js","../node_modules/culori/src/oklab/convertRgbToOklab.js","../node_modules/culori/src/oklab/definition.js","../node_modules/culori/src/oklch/definition.js","../node_modules/culori/src/p3/convertP3ToXyz65.js","../node_modules/culori/src/p3/convertXyz65ToP3.js","../node_modules/culori/src/p3/definition.js","../node_modules/culori/src/parse.js","../node_modules/culori/src/prophoto/convertProphotoToXyz50.js","../node_modules/culori/src/prophoto/convertXyz50ToProphoto.js","../node_modules/culori/src/prophoto/definition.js","../node_modules/culori/src/rec2020/convertRec2020ToXyz65.js","../node_modules/culori/src/rec2020/convertXyz65ToRec2020.js","../node_modules/culori/src/rec2020/definition.js","../node_modules/culori/src/rgb/definition.js","../node_modules/culori/src/rgb/parseHex.js","../node_modules/culori/src/rgb/parseNamed.js","../node_modules/culori/src/rgb/parseNumber.js","../node_modules/culori/src/rgb/parseRgb.js","../node_modules/culori/src/rgb/parseTransparent.js","../node_modules/culori/src/util/hue.js","../node_modules/culori/src/util/normalizeHue.js","../node_modules/culori/src/util/regex.js","../node_modules/culori/src/xyz50/constants.js","../node_modules/culori/src/xyz50/convertRgbToXyz50.js","../node_modules/culori/src/xyz50/convertXyz50ToRgb.js","../node_modules/culori/src/xyz50/definition.js","../node_modules/culori/src/xyz65/constants.js","../node_modules/culori/src/xyz65/convertRgbToXyz65.js","../node_modules/culori/src/xyz65/convertXyz50ToXyz65.js","../node_modules/culori/src/xyz65/convertXyz65ToRgb.js","../node_modules/culori/src/xyz65/convertXyz65ToXyz50.js","../node_modules/culori/src/xyz65/definition.js","../node_modules/culori/src/yiq/convertRgbToYiq.js","../node_modules/culori/src/yiq/convertYiqToRgb.js","../node_modules/culori/src/yiq/definition.js"],"sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import parse from './parse.js';\n\nconst prepare = (color, mode) =>\n\tcolor === undefined\n\t\t? undefined\n\t\t: typeof color !== 'object'\n\t\t? parse(color)\n\t\t: color.mode !== undefined\n\t\t? color\n\t\t: mode\n\t\t? { ...color, mode }\n\t\t: undefined;\n\nexport default prepare;\n","/*\n\tConvert A98 RGB values to CIE XYZ D65\n\n\tReferences:\n\t\t* https://drafts.csswg.org/css-color/#color-conversion-code\n\t\t* http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\t\t* https://www.adobe.com/digitalimag/pdfs/AdobeRGB1998.pdf\n*/\n\nconst linearize = v => Math.pow(Math.abs(v), 563 / 256) * Math.sign(v);\n\nconst convertA98ToXyz65 = a98 => {\n\tlet r = linearize(a98.r);\n\tlet g = linearize(a98.g);\n\tlet b = linearize(a98.b);\n\tlet res = {\n\t\tmode: 'xyz65',\n\t\tx:\n\t\t\t0.5766690429101305 * r +\n\t\t\t0.1855582379065463 * g +\n\t\t\t0.1882286462349947 * b,\n\t\ty:\n\t\t\t0.29734497525053605 * r +\n\t\t\t0.6273635662554661 * g +\n\t\t\t0.07529145849399788 * b,\n\t\tz:\n\t\t\t0.02703136138641234 * r +\n\t\t\t0.07068885253582723 * g +\n\t\t\t0.9913375368376388 * b\n\t};\n\tif (a98.alpha !== undefined) {\n\t\tres.alpha = a98.alpha;\n\t}\n\treturn res;\n};\n\nexport default convertA98ToXyz65;\n","/*\n\tConvert CIE XYZ D65 values to A98 RGB\n\n\tReferences:\n\t\t* https://drafts.csswg.org/css-color/#color-conversion-code\n\t\t* http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n*/\n\nconst gamma = v => Math.pow(Math.abs(v), 256 / 563) * Math.sign(v);\n\nconst convertXyz65ToA98 = ({ x, y, z, alpha }) => {\n\tlet res = {\n\t\tmode: 'a98',\n\t\tr: gamma(\n\t\t\tx * 2.0415879038107465 -\n\t\t\t\ty * 0.5650069742788596 -\n\t\t\t\t0.34473135077832956 * z\n\t\t),\n\t\tg: gamma(\n\t\t\tx * -0.9692436362808795 +\n\t\t\t\ty * 1.8759675015077202 +\n\t\t\t\t0.04155505740717557 * z\n\t\t),\n\t\tb: gamma(\n\t\t\tx * 0.013444280632031142 -\n\t\t\t\ty * 0.11836239223101838 +\n\t\t\t\t1.0151749943912054 * z\n\t\t)\n\t};\n\tif (alpha !== undefined) {\n\t\tres.alpha = alpha;\n\t}\n\treturn res;\n};\n\nexport default convertXyz65ToA98;\n","import rgb from '../rgb/definition.js';\n\nimport convertA98ToXyz65 from './convertA98ToXyz65.js';\nimport convertXyz65ToA98 from './convertXyz65ToA98.js';\nimport convertRgbToXyz65 from '../xyz65/convertRgbToXyz65.js';\nimport convertXyz65ToRgb from '../xyz65/convertXyz65ToRgb.js';\n\nconst definition = {\n\t...rgb,\n\tmode: 'a98',\n\tparse: ['a98-rgb'],\n\tserialize: 'a98-rgb',\n\n\tfromMode: {\n\t\trgb: color => convertXyz65ToA98(convertRgbToXyz65(color)),\n\t\txyz65: convertXyz65ToA98\n\t},\n\n\ttoMode: {\n\t\trgb: color => convertXyz65ToRgb(convertA98ToXyz65(color)),\n\t\txyz65: convertA98ToXyz65\n\t}\n};\n\nexport default definition;\n","import converter from './converter.js';\nimport { getMode } from './modes.js';\n\nconst averageAngle = val => {\n\t// See: https://en.wikipedia.org/wiki/Mean_of_circular_quantities\n\tlet sum = val.reduce(\n\t\t(sum, val) => {\n\t\t\tif (val !== undefined) {\n\t\t\t\tlet rad = (val * Math.PI) / 180;\n\t\t\t\tsum.sin += Math.sin(rad);\n\t\t\t\tsum.cos += Math.cos(rad);\n\t\t\t}\n\t\t\treturn sum;\n\t\t},\n\t\t{ sin: 0, cos: 0 }\n\t);\n\treturn (Math.atan2(sum.sin, sum.cos) * 180) / Math.PI;\n};\n\nconst averageNumber = val => {\n\tlet a = val.filter(v => v !== undefined);\n\treturn a.length ? a.reduce((sum, v) => sum + v, 0) / a.length : undefined;\n};\n\nconst isfn = o => typeof o === 'function';\n\nfunction average(colors, mode = 'rgb', overrides) {\n\tlet def = getMode(mode);\n\tlet cc = colors.map(converter(mode));\n\treturn def.channels.reduce(\n\t\t(res, ch) => {\n\t\t\tlet arr = cc.map(c => c[ch]).filter(val => val !== undefined);\n\t\t\tif (arr.length) {\n\t\t\t\tlet fn;\n\t\t\t\tif (isfn(overrides)) {\n\t\t\t\t\tfn = overrides;\n\t\t\t\t} else if (overrides && isfn(overrides[ch])) {\n\t\t\t\t\tfn = overrides[ch];\n\t\t\t\t} else if (def.average && isfn(def.average[ch])) {\n\t\t\t\t\tfn = def.average[ch];\n\t\t\t\t} else {\n\t\t\t\t\tfn = averageNumber;\n\t\t\t\t}\n\t\t\t\tres[ch] = fn(arr, ch);\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\t\t{ mode }\n\t);\n}\n\nexport { average, averageAngle, averageNumber };\n","const named = {\n\taliceblue: 0xf0f8ff,\n\tantiquewhite: 0xfaebd7,\n\taqua: 0x00ffff,\n\taquamarine: 0x7fffd4,\n\tazure: 0xf0ffff,\n\tbeige: 0xf5f5dc,\n\tbisque: 0xffe4c4,\n\tblack: 0x000000,\n\tblanchedalmond: 0xffebcd,\n\tblue: 0x0000ff,\n\tblueviolet: 0x8a2be2,\n\tbrown: 0xa52a2a,\n\tburlywood: 0xdeb887,\n\tcadetblue: 0x5f9ea0,\n\tchartreuse: 0x7fff00,\n\tchocolate: 0xd2691e,\n\tcoral: 0xff7f50,\n\tcornflowerblue: 0x6495ed,\n\tcornsilk: 0xfff8dc,\n\tcrimson: 0xdc143c,\n\tcyan: 0x00ffff,\n\tdarkblue: 0x00008b,\n\tdarkcyan: 0x008b8b,\n\tdarkgoldenrod: 0xb8860b,\n\tdarkgray: 0xa9a9a9,\n\tdarkgreen: 0x006400,\n\tdarkgrey: 0xa9a9a9,\n\tdarkkhaki: 0xbdb76b,\n\tdarkmagenta: 0x8b008b,\n\tdarkolivegreen: 0x556b2f,\n\tdarkorange: 0xff8c00,\n\tdarkorchid: 0x9932cc,\n\tdarkred: 0x8b0000,\n\tdarksalmon: 0xe9967a,\n\tdarkseagreen: 0x8fbc8f,\n\tdarkslateblue: 0x483d8b,\n\tdarkslategray: 0x2f4f4f,\n\tdarkslategrey: 0x2f4f4f,\n\tdarkturquoise: 0x00ced1,\n\tdarkviolet: 0x9400d3,\n\tdeeppink: 0xff1493,\n\tdeepskyblue: 0x00bfff,\n\tdimgray: 0x696969,\n\tdimgrey: 0x696969,\n\tdodgerblue: 0x1e90ff,\n\tfirebrick: 0xb22222,\n\tfloralwhite: 0xfffaf0,\n\tforestgreen: 0x228b22,\n\tfuchsia: 0xff00ff,\n\tgainsboro: 0xdcdcdc,\n\tghostwhite: 0xf8f8ff,\n\tgold: 0xffd700,\n\tgoldenrod: 0xdaa520,\n\tgray: 0x808080,\n\tgreen: 0x008000,\n\tgreenyellow: 0xadff2f,\n\tgrey: 0x808080,\n\thoneydew: 0xf0fff0,\n\thotpink: 0xff69b4,\n\tindianred: 0xcd5c5c,\n\tindigo: 0x4b0082,\n\tivory: 0xfffff0,\n\tkhaki: 0xf0e68c,\n\tlavender: 0xe6e6fa,\n\tlavenderblush: 0xfff0f5,\n\tlawngreen: 0x7cfc00,\n\tlemonchiffon: 0xfffacd,\n\tlightblue: 0xadd8e6,\n\tlightcoral: 0xf08080,\n\tlightcyan: 0xe0ffff,\n\tlightgoldenrodyellow: 0xfafad2,\n\tlightgray: 0xd3d3d3,\n\tlightgreen: 0x90ee90,\n\tlightgrey: 0xd3d3d3,\n\tlightpink: 0xffb6c1,\n\tlightsalmon: 0xffa07a,\n\tlightseagreen: 0x20b2aa,\n\tlightskyblue: 0x87cefa,\n\tlightslategray: 0x778899,\n\tlightslategrey: 0x778899,\n\tlightsteelblue: 0xb0c4de,\n\tlightyellow: 0xffffe0,\n\tlime: 0x00ff00,\n\tlimegreen: 0x32cd32,\n\tlinen: 0xfaf0e6,\n\tmagenta: 0xff00ff,\n\tmaroon: 0x800000,\n\tmediumaquamarine: 0x66cdaa,\n\tmediumblue: 0x0000cd,\n\tmediumorchid: 0xba55d3,\n\tmediumpurple: 0x9370db,\n\tmediumseagreen: 0x3cb371,\n\tmediumslateblue: 0x7b68ee,\n\tmediumspringgreen: 0x00fa9a,\n\tmediumturquoise: 0x48d1cc,\n\tmediumvioletred: 0xc71585,\n\tmidnightblue: 0x191970,\n\tmintcream: 0xf5fffa,\n\tmistyrose: 0xffe4e1,\n\tmoccasin: 0xffe4b5,\n\tnavajowhite: 0xffdead,\n\tnavy: 0x000080,\n\toldlace: 0xfdf5e6,\n\tolive: 0x808000,\n\tolivedrab: 0x6b8e23,\n\torange: 0xffa500,\n\torangered: 0xff4500,\n\torchid: 0xda70d6,\n\tpalegoldenrod: 0xeee8aa,\n\tpalegreen: 0x98fb98,\n\tpaleturquoise: 0xafeeee,\n\tpalevioletred: 0xdb7093,\n\tpapayawhip: 0xffefd5,\n\tpeachpuff: 0xffdab9,\n\tperu: 0xcd853f,\n\tpink: 0xffc0cb,\n\tplum: 0xdda0dd,\n\tpowderblue: 0xb0e0e6,\n\tpurple: 0x800080,\n\n\t// Added in CSS Colors Level 4:\n\t// https://drafts.csswg.org/css-color/#changes-from-3\n\trebeccapurple: 0x663399,\n\n\tred: 0xff0000,\n\trosybrown: 0xbc8f8f,\n\troyalblue: 0x4169e1,\n\tsaddlebrown: 0x8b4513,\n\tsalmon: 0xfa8072,\n\tsandybrown: 0xf4a460,\n\tseagreen: 0x2e8b57,\n\tseashell: 0xfff5ee,\n\tsienna: 0xa0522d,\n\tsilver: 0xc0c0c0,\n\tskyblue: 0x87ceeb,\n\tslateblue: 0x6a5acd,\n\tslategray: 0x708090,\n\tslategrey: 0x708090,\n\tsnow: 0xfffafa,\n\tspringgreen: 0x00ff7f,\n\tsteelblue: 0x4682b4,\n\ttan: 0xd2b48c,\n\tteal: 0x008080,\n\tthistle: 0xd8bfd8,\n\ttomato: 0xff6347,\n\tturquoise: 0x40e0d0,\n\tviolet: 0xee82ee,\n\twheat: 0xf5deb3,\n\twhite: 0xffffff,\n\twhitesmoke: 0xf5f5f5,\n\tyellow: 0xffff00,\n\tyellowgreen: 0x9acd32\n};\n\nexport default named;\n","import { converters } from './modes.js';\nimport prepare from './_prepare.js';\n\nconst converter =\n\t(target_mode = 'rgb') =>\n\tcolor =>\n\t\t(color = prepare(color, target_mode)) !== undefined\n\t\t\t? // if the color's mode corresponds to our target mode\n\t\t\t  color.mode === target_mode\n\t\t\t\t? // then just return the color\n\t\t\t\t  color\n\t\t\t\t: // otherwise check to see if we have a dedicated\n\t\t\t\t// converter for the target mode\n\t\t\t\tconverters[color.mode][target_mode]\n\t\t\t\t? // and return its result...\n\t\t\t\t  converters[color.mode][target_mode](color)\n\t\t\t\t: // ...otherwise pass through RGB as an intermediary step.\n\t\t\t\t// if the target mode is RGB...\n\t\t\t\ttarget_mode === 'rgb'\n\t\t\t\t? // just return the RGB\n\t\t\t\t  converters[color.mode].rgb(color)\n\t\t\t\t: // otherwise convert color.mode -> RGB -> target_mode\n\t\t\t\t  converters.rgb[target_mode](converters[color.mode].rgb(color))\n\t\t\t: undefined;\n\nexport default converter;\n","export const M = [-0.14861, 1.78277, -0.29227, -0.90649, 1.97294, 0];\n\nexport const degToRad = Math.PI / 180;\nexport const radToDeg = 180 / Math.PI;\n","import { degToRad, M } from './constants.js';\n\nconst convertCubehelixToRgb = ({ h, s, l, alpha }) => {\n\tlet res = { mode: 'rgb' };\n\n\th = (h === undefined ? 0 : h + 120) * degToRad;\n\n\tlet amp = s === undefined ? 0 : s * l * (1 - l);\n\n\tlet cosh = Math.cos(h);\n\tlet sinh = Math.sin(h);\n\n\tres.r = l + amp * (M[0] * cosh + M[1] * sinh);\n\tres.g = l + amp * (M[2] * cosh + M[3] * sinh);\n\tres.b = l + amp * (M[4] * cosh + M[5] * sinh);\n\n\tif (alpha !== undefined) res.alpha = alpha;\n\treturn res;\n};\n\nexport default convertCubehelixToRgb;\n","/*\n\tConvert a RGB color to the Cubehelix HSL color space.\n\n\tThis computation is not present in Green's paper:\n\thttps://arxiv.org/pdf/1108.5083.pdf\n\n\t...but can be derived from the inverse, HSL to RGB conversion.\n\n\tIt matches the math in Mike Bostock's D3 implementation:\n\n\thttps://github.com/d3/d3-color/blob/master/src/cubehelix.js\n */\n\nimport { radToDeg, M } from './constants.js';\n\nlet DE = M[3] * M[4];\nlet BE = M[1] * M[4];\nlet BCAD = M[1] * M[2] - M[0] * M[3];\n\nconst convertRgbToCubehelix = ({ r, g, b, alpha }) => {\n\tlet l = (BCAD * b + r * DE - g * BE) / (BCAD + DE - BE);\n\tlet x = b - l;\n\tlet y = (M[4] * (g - l) - M[2] * x) / M[3];\n\n\tlet res = {\n\t\tmode: 'cubehelix',\n\t\tl: l,\n\t\ts:\n\t\t\tl === 0 || l === 1\n\t\t\t\t? undefined\n\t\t\t\t: Math.sqrt(x * x + y * y) / (M[4] * l * (1 - l))\n\t};\n\n\tif (res.s) res.h = Math.atan2(y, x) * radToDeg - 120;\n\tif (alpha !== undefined) res.alpha = alpha;\n\n\treturn res;\n};\n\nexport default convertRgbToCubehelix;\n","/* \n\tDave Green's Cubehelix\n\t----------------------\n\n\tGreen, D. A., 2011, \"A colour scheme for the display of astronomical intensity images\", \n\tBulletin of the Astronomical Society of India, 39, 289. (2011BASI...39..289G at ADS.) \n\n\thttps://www.mrao.cam.ac.uk/%7Edag/CUBEHELIX/\n\thttps://arxiv.org/pdf/1108.5083.pdf\n\n\tAlthough Cubehelix was defined to be a method to obtain a colour scheme,\n\tit actually contains a definition of a colour space, as identified by \n\tMike Bostock and implemented in D3.js.\n\n\tGreen's paper introduces the following terminology:\n\n\t* \ta `lightness` dimension in the interval [0, 1] \n\t\ton which we interpolate to obtain the colour scheme\n\t*\ta `start` colour that is analogous to a Hue in HSL space\n\t*\ta number of `rotations` around the Hue cylinder.\n\t*\ta `hue` parameter which should more appropriately be called `saturation`\n\t\n\tAs such, the original definition of the Cubehelix scheme is actually an\n\tinterpolation between two colors in the Cubehelix space:\n\n\tH: start \t\t\t\tH: start + 360 * rotations\n\tS: hue \t\t\t->\t\tS: hue\n\tL: 0\t\t\t\t\tL: 1\n\n\tWe can therefore extend the interpolation to any two colors in this space,\n\twith a variable Saturation and a Lightness interval other than the fixed 0 -> 1.\n*/\n\nimport { fixupHueShorter } from '../fixup/hue.js';\nimport { fixupAlpha } from '../fixup/alpha.js';\nimport { interpolatorLinear } from '../interpolate/linear.js';\nimport convertRgbToCubehelix from './convertRgbToCubehelix.js';\nimport convertCubehelixToRgb from './convertCubehelixToRgb.js';\nimport { differenceHueSaturation } from '../difference.js';\nimport { averageAngle } from '../average.js';\n\nconst definition = {\n\tmode: 'cubehelix',\n\tchannels: ['h', 's', 'l', 'alpha'],\n\tparse: ['--cubehelix'],\n\tserialize: '--cubehelix',\n\n\tranges: {\n\t\th: [0, 360],\n\t\ts: [0, 4.614],\n\t\tl: [0, 1]\n\t},\n\n\tfromMode: {\n\t\trgb: convertRgbToCubehelix\n\t},\n\n\ttoMode: {\n\t\trgb: convertCubehelixToRgb\n\t},\n\n\tinterpolate: {\n\t\th: {\n\t\t\tuse: interpolatorLinear,\n\t\t\tfixup: fixupHueShorter\n\t\t},\n\t\ts: interpolatorLinear,\n\t\tl: interpolatorLinear,\n\t\talpha: {\n\t\t\tuse: interpolatorLinear,\n\t\t\tfixup: fixupAlpha\n\t\t}\n\t},\n\n\tdifference: {\n\t\th: differenceHueSaturation\n\t},\n\n\taverage: {\n\t\th: averageAngle\n\t}\n};\n\nexport default definition;\n","import convertLabToLch from '../lch/convertLabToLch.js';\nimport convertLchToLab from '../lch/convertLchToLab.js';\nimport convertLab65ToRgb from '../lab65/convertLab65ToRgb.js';\nimport convertRgbToLab65 from '../lab65/convertRgbToLab65.js';\nimport convertDlchToLab65 from '../dlch/convertDlchToLab65.js';\nimport convertLab65ToDlch from '../dlch/convertLab65ToDlch.js';\nimport { interpolatorLinear } from '../interpolate/linear.js';\nimport { fixupAlpha } from '../fixup/alpha.js';\n\nconst convertDlabToLab65 = c => convertDlchToLab65(convertLabToLch(c, 'dlch'));\nconst convertLab65ToDlab = c => convertLchToLab(convertLab65ToDlch(c), 'dlab');\n\nconst definition = {\n\tmode: 'dlab',\n\n\tparse: ['--din99o-lab'],\n\tserialize: '--din99o-lab',\n\n\ttoMode: {\n\t\tlab65: convertDlabToLab65,\n\t\trgb: c => convertLab65ToRgb(convertDlabToLab65(c))\n\t},\n\n\tfromMode: {\n\t\tlab65: convertLab65ToDlab,\n\t\trgb: c => convertLab65ToDlab(convertRgbToLab65(c))\n\t},\n\n\tchannels: ['l', 'a', 'b', 'alpha'],\n\n\tranges: {\n\t\tl: [0, 100],\n\t\ta: [-40.09, 45.501],\n\t\tb: [-40.469, 44.344]\n\t},\n\n\tinterpolate: {\n\t\tl: interpolatorLinear,\n\t\ta: interpolatorLinear,\n\t\tb: interpolatorLinear,\n\t\talpha: {\n\t\t\tuse: interpolatorLinear,\n\t\t\tfixup: fixupAlpha\n\t\t}\n\t}\n};\n\nexport default definition;\n","export const kE = 1;\nexport const kCH = 1;\nexport const θ = (26 / 180) * Math.PI;\nexport const cosθ = Math.cos(θ);\nexport const sinθ = Math.sin(θ);\nexport const factor = 100 / Math.log(139 / 100); // ~ 303.67\n","import { kCH, kE, sinθ, cosθ, θ, factor } from './constants.js';\n\n/*\n\tConvert DIN99o LCh to CIELab D65\n\t--------------------------------\n */\n\nconst convertDlchToLab65 = ({ l, c, h, alpha }) => {\n\tlet res = {\n\t\tmode: 'lab65',\n\t\tl: (Math.exp((l * kE) / factor) - 1) / 0.0039\n\t};\n\n\tif (h === undefined) {\n\t\tres.a = res.b = 0;\n\t} else {\n\t\tlet G = (Math.exp(0.0435 * c * kCH * kE) - 1) / 0.075;\n\t\tlet e = G * Math.cos((h / 180) * Math.PI - θ);\n\t\tlet f = G * Math.sin((h / 180) * Math.PI - θ);\n\t\tres.a = e * cosθ - (f / 0.83) * sinθ;\n\t\tres.b = e * sinθ + (f / 0.83) * cosθ;\n\t}\n\n\tif (alpha !== undefined) res.alpha = alpha;\n\treturn res;\n};\n\nexport default convertDlchToLab65;\n","import { kCH, kE, sinθ, cosθ, θ, factor } from './constants.js';\nimport normalizeHue from '../util/normalizeHue.js';\n\n/*\n\tConvert CIELab D65 to DIN99o LCh\n\t================================\n */\n\nconst convertLab65ToDlch = ({ l, a, b, alpha }) => {\n\tlet e = a * cosθ + b * sinθ;\n\tlet f = 0.83 * (b * cosθ - a * sinθ);\n\tlet G = Math.sqrt(e * e + f * f);\n\tlet res = {\n\t\tmode: 'dlch',\n\t\tl: (factor / kE) * Math.log(1 + 0.0039 * l),\n\t\tc: Math.log(1 + 0.075 * G) / (0.0435 * kCH * kE)\n\t};\n\n\tif (res.c) {\n\t\tres.h = normalizeHue(((Math.atan2(f, e) + θ) / Math.PI) * 180);\n\t}\n\n\tif (alpha !== undefined) res.alpha = alpha;\n\treturn res;\n};\n\nexport default convertLab65ToDlch;\n","import convertLabToLch from '../lch/convertLabToLch.js';\nimport convertLchToLab from '../lch/convertLchToLab.js';\nimport convertDlchToLab65 from './convertDlchToLab65.js';\nimport convertLab65ToDlch from './convertLab65ToDlch.js';\nimport convertLab65ToRgb from '../lab65/convertLab65ToRgb.js';\nimport convertRgbToLab65 from '../lab65/convertRgbToLab65.js';\n\nimport { fixupHueShorter } from '../fixup/hue.js';\nimport { fixupAlpha } from '../fixup/alpha.js';\nimport { interpolatorLinear } from '../interpolate/linear.js';\nimport { differenceHueChroma } from '../difference.js';\nimport { averageAngle } from '../average.js';\n\nconst definition = {\n\tmode: 'dlch',\n\n\tparse: ['--din99o-lch'],\n\tserialize: '--din99o-lch',\n\n\ttoMode: {\n\t\tlab65: convertDlchToLab65,\n\t\tdlab: c => convertLchToLab(c, 'dlab'),\n\t\trgb: c => convertLab65ToRgb(convertDlchToLab65(c))\n\t},\n\n\tfromMode: {\n\t\tlab65: convertLab65ToDlch,\n\t\tdlab: c => convertLabToLch(c, 'dlch'),\n\t\trgb: c => convertLab65ToDlch(convertRgbToLab65(c))\n\t},\n\n\tchannels: ['l', 'c', 'h', 'alpha'],\n\n\tranges: {\n\t\tl: [0, 100],\n\t\tc: [0, 51.484],\n\t\th: [0, 360]\n\t},\n\n\tinterpolate: {\n\t\tl: interpolatorLinear,\n\t\tc: interpolatorLinear,\n\t\th: {\n\t\t\tuse: interpolatorLinear,\n\t\t\tfixup: fixupHueShorter\n\t\t},\n\t\talpha: {\n\t\t\tuse: interpolatorLinear,\n\t\t\tfixup: fixupAlpha\n\t\t}\n\t},\n\n\tdifference: {\n\t\th: differenceHueChroma\n\t},\n\n\taverage: {\n\t\th: averageAngle\n\t}\n};\n\nexport default definition;\n","const fixupAlpha = arr => {\n\tlet some_defined = false;\n\tlet res = arr.map(v => {\n\t\tif (v !== undefined) {\n\t\t\tsome_defined = true;\n\t\t\treturn v;\n\t\t}\n\t\treturn 1;\n\t});\n\treturn some_defined ? res : arr;\n};\n\nexport { fixupAlpha };\n","import normalizeHue from '../util/normalizeHue.js';\n\nconst hue = (hues, fn) => {\n\treturn hues\n\t\t.map((hue, idx, arr) => {\n\t\t\tif (hue === undefined) {\n\t\t\t\treturn hue;\n\t\t\t}\n\t\t\tlet normalized = normalizeHue(hue);\n\t\t\tif (idx === 0 || hues[idx - 1] === undefined) {\n\t\t\t\treturn normalized;\n\t\t\t}\n\t\t\treturn fn(normalized - normalizeHue(arr[idx - 1]));\n\t\t})\n\t\t.reduce((acc, curr) => {\n\t\t\tif (\n\t\t\t\t!acc.length ||\n\t\t\t\tcurr === undefined ||\n\t\t\t\tacc[acc.length - 1] === undefined\n\t\t\t) {\n\t\t\t\tacc.push(curr);\n\t\t\t\treturn acc;\n\t\t\t}\n\t\t\tacc.push(curr + acc[acc.length - 1]);\n\t\t\treturn acc;\n\t\t}, []);\n};\n\nconst fixupHueShorter = arr =>\n\thue(arr, d => (Math.abs(d) <= 180 ? d : d - 360 * Math.sign(d)));\nconst fixupHueLonger = arr =>\n\thue(arr, d => (Math.abs(d) >= 180 || d === 0 ? d : d - 360 * Math.sign(d)));\nconst fixupHueIncreasing = arr => hue(arr, d => (d >= 0 ? d : d + 360));\nconst fixupHueDecreasing = arr => hue(arr, d => (d <= 0 ? d : d - 360));\n\nexport {\n\tfixupHueShorter,\n\tfixupHueLonger,\n\tfixupHueIncreasing,\n\tfixupHueDecreasing\n};\n","import normalizeHue from '../util/normalizeHue.js';\n\n// Based on: https://en.wikipedia.org/wiki/HSL_and_HSV#Converting_to_RGB\n\nexport default function convertHsiToRgb({ h, s, i, alpha }) {\n\th = normalizeHue(h);\n\tlet f = Math.abs(((h / 60) % 2) - 1);\n\tlet res;\n\tswitch (Math.floor(h / 60)) {\n\t\tcase 0:\n\t\t\tres = {\n\t\t\t\tr: i * (1 + s * (3 / (2 - f) - 1)),\n\t\t\t\tg: i * (1 + s * ((3 * (1 - f)) / (2 - f) - 1)),\n\t\t\t\tb: i * (1 - s)\n\t\t\t};\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tres = {\n\t\t\t\tr: i * (1 + s * ((3 * (1 - f)) / (2 - f) - 1)),\n\t\t\t\tg: i * (1 + s * (3 / (2 - f) - 1)),\n\t\t\t\tb: i * (1 - s)\n\t\t\t};\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tres = {\n\t\t\t\tr: i * (1 - s),\n\t\t\t\tg: i * (1 + s * (3 / (2 - f) - 1)),\n\t\t\t\tb: i * (1 + s * ((3 * (1 - f)) / (2 - f) - 1))\n\t\t\t};\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tres = {\n\t\t\t\tr: i * (1 - s),\n\t\t\t\tg: i * (1 + s * ((3 * (1 - f)) / (2 - f) - 1)),\n\t\t\t\tb: i * (1 + s * (3 / (2 - f) - 1))\n\t\t\t};\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tres = {\n\t\t\t\tr: i * (1 + s * ((3 * (1 - f)) / (2 - f) - 1)),\n\t\t\t\tg: i * (1 - s),\n\t\t\t\tb: i * (1 + s * (3 / (2 - f) - 1))\n\t\t\t};\n\t\t\tbreak;\n\t\tcase 5:\n\t\t\tres = {\n\t\t\t\tr: i * (1 + s * (3 / (2 - f) - 1)),\n\t\t\t\tg: i * (1 - s),\n\t\t\t\tb: i * (1 + s * ((3 * (1 - f)) / (2 - f) - 1))\n\t\t\t};\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tres = { r: i * (1 - s), g: i * (1 - s), b: i * (1 - s) };\n\t}\n\n\tres.mode = 'rgb';\n\tif (alpha !== undefined) res.alpha = alpha;\n\treturn res;\n}\n","// Based on: https://en.wikipedia.org/wiki/HSL_and_HSV#Formal_derivation\n\nexport default function convertRgbToHsi({ r, g, b, alpha }) {\n\tlet M = Math.max(r, g, b),\n\t\tm = Math.min(r, g, b);\n\tlet res = {\n\t\tmode: 'hsi',\n\t\ts: r + g + b === 0 ? 0 : 1 - (3 * m) / (r + g + b),\n\t\ti: (r + g + b) / 3\n\t};\n\tif (M - m !== 0)\n\t\tres.h =\n\t\t\t(M === r\n\t\t\t\t? (g - b) / (M - m) + (g < b) * 6\n\t\t\t\t: M === g\n\t\t\t\t? (b - r) / (M - m) + 2\n\t\t\t\t: (r - g) / (M - m) + 4) * 60;\n\tif (alpha !== undefined) res.alpha = alpha;\n\treturn res;\n}\n","import convertHsiToRgb from './convertHsiToRgb.js';\nimport convertRgbToHsi from './convertRgbToHsi.js';\nimport { fixupHueShorter } from '../fixup/hue.js';\nimport { fixupAlpha } from '../fixup/alpha.js';\nimport { interpolatorLinear } from '../interpolate/linear.js';\nimport { differenceHueSaturation } from '../difference.js';\nimport { averageAngle } from '../average.js';\n\nconst definition = {\n\tmode: 'hsi',\n\n\ttoMode: {\n\t\trgb: convertHsiToRgb\n\t},\n\n\tparse: ['--hsi'],\n\tserialize: '--hsi',\n\n\tfromMode: {\n\t\trgb: convertRgbToHsi\n\t},\n\n\tchannels: ['h', 's', 'i', 'alpha'],\n\n\tranges: {\n\t\th: [0, 360]\n\t},\n\n\tinterpolate: {\n\t\th: { use: interpolatorLinear, fixup: fixupHueShorter },\n\t\ts: interpolatorLinear,\n\t\ti: interpolatorLinear,\n\t\talpha: { use: interpolatorLinear, fixup: fixupAlpha }\n\t},\n\n\tdifference: {\n\t\th: differenceHueSaturation\n\t},\n\n\taverage: {\n\t\th: averageAngle\n\t}\n};\n\nexport default definition;\n","import normalizeHue from '../util/normalizeHue.js';\n// Based on: https://en.wikipedia.org/wiki/HSL_and_HSV#Converting_to_RGB\n\nexport default function convertHslToRgb({ h, s, l, alpha }) {\n\th = normalizeHue(h);\n\tlet m1 = l + s * (l < 0.5 ? l : 1 - l);\n\tlet m2 = m1 - (m1 - l) * 2 * Math.abs(((h / 60) % 2) - 1);\n\tlet res;\n\tswitch (Math.floor(h / 60)) {\n\t\tcase 0:\n\t\t\tres = { r: m1, g: m2, b: 2 * l - m1 };\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tres = { r: m2, g: m1, b: 2 * l - m1 };\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tres = { r: 2 * l - m1, g: m1, b: m2 };\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tres = { r: 2 * l - m1, g: m2, b: m1 };\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tres = { r: m2, g: 2 * l - m1, b: m1 };\n\t\t\tbreak;\n\t\tcase 5:\n\t\t\tres = { r: m1, g: 2 * l - m1, b: m2 };\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tres = { r: 2 * l - m1, g: 2 * l - m1, b: 2 * l - m1 };\n\t}\n\tres.mode = 'rgb';\n\tif (alpha !== undefined) res.alpha = alpha;\n\treturn res;\n}\n","// Based on: https://en.wikipedia.org/wiki/HSL_and_HSV#Formal_derivation\n\nexport default function convertRgbToHsl({ r, g, b, alpha }) {\n\tlet M = Math.max(r, g, b),\n\t\tm = Math.min(r, g, b);\n\tlet res = {\n\t\tmode: 'hsl',\n\t\ts: M === m ? 0 : (M - m) / (1 - Math.abs(M + m - 1)),\n\t\tl: 0.5 * (M + m)\n\t};\n\tif (M - m !== 0)\n\t\tres.h =\n\t\t\t(M === r\n\t\t\t\t? (g - b) / (M - m) + (g < b) * 6\n\t\t\t\t: M === g\n\t\t\t\t? (b - r) / (M - m) + 2\n\t\t\t\t: (r - g) / (M - m) + 4) * 60;\n\tif (alpha !== undefined) res.alpha = alpha;\n\treturn res;\n}\n","import convertHslToRgb from './convertHslToRgb.js';\nimport convertRgbToHsl from './convertRgbToHsl.js';\nimport parseHsl from './parseHsl.js';\nimport { fixupHueShorter } from '../fixup/hue.js';\nimport { fixupAlpha } from '../fixup/alpha.js';\nimport { interpolatorLinear } from '../interpolate/linear.js';\nimport { differenceHueSaturation } from '../difference.js';\nimport { averageAngle } from '../average.js';\n\nconst definition = {\n\tmode: 'hsl',\n\n\ttoMode: {\n\t\trgb: convertHslToRgb\n\t},\n\n\tfromMode: {\n\t\trgb: convertRgbToHsl\n\t},\n\n\tchannels: ['h', 's', 'l', 'alpha'],\n\n\tranges: {\n\t\th: [0, 360]\n\t},\n\n\tparse: [parseHsl],\n\tserialize: c =>\n\t\t`hsl(${c.h || 0} ${c.s !== undefined ? c.s * 100 + '%' : 'none'} ${\n\t\t\tc.l !== undefined ? c.l * 100 + '%' : 'none'\n\t\t}${c.alpha < 1 ? ` / ${c.alpha}` : ''})`,\n\n\tinterpolate: {\n\t\th: { use: interpolatorLinear, fixup: fixupHueShorter },\n\t\ts: interpolatorLinear,\n\t\tl: interpolatorLinear,\n\t\talpha: { use: interpolatorLinear, fixup: fixupAlpha }\n\t},\n\n\tdifference: {\n\t\th: differenceHueSaturation\n\t},\n\n\taverage: {\n\t\th: averageAngle\n\t}\n};\n\nexport default definition;\n","import hueToDeg from '../util/hue.js';\nimport {\n\thue,\n\tper,\n\tnum_per,\n\thue_none,\n\tper_none,\n\tnum_per_none,\n\tc,\n\ts\n} from '../util/regex.js';\n\n/*\n\thsl() regular expressions.\n\tReference: https://drafts.csswg.org/css-color/#the-hsl-notation\n */\nconst hsl_old = new RegExp(\n\t`^hsla?\\\\(\\\\s*${hue}${c}${per}${c}${per}\\\\s*(?:,\\\\s*${num_per}\\\\s*)?\\\\)$`\n);\nconst hsl_new = new RegExp(\n\t`^hsla?\\\\(\\\\s*${hue_none}${s}${per_none}${s}${per_none}\\\\s*(?:\\\\/\\\\s*${num_per_none}\\\\s*)?\\\\)$`\n);\n\nconst parseHsl = color => {\n\tlet match = color.match(hsl_old) || color.match(hsl_new);\n\tif (!match) return;\n\tlet res = { mode: 'hsl' };\n\n\tif (match[3] !== undefined) {\n\t\tres.h = +match[3];\n\t} else if (match[1] !== undefined && match[2] !== undefined) {\n\t\tres.h = hueToDeg(match[1], match[2]);\n\t}\n\n\tif (match[4] !== undefined) {\n\t\tres.s = Math.min(Math.max(0, match[4] / 100), 1);\n\t}\n\n\tif (match[5] !== undefined) {\n\t\tres.l = Math.min(Math.max(0, match[5] / 100), 1);\n\t}\n\n\tif (match[6] !== undefined) {\n\t\tres.alpha = match[6] / 100;\n\t} else if (match[7] !== undefined) {\n\t\tres.alpha = +match[7];\n\t}\n\treturn res;\n};\n\nexport default parseHsl;\n","import normalizeHue from '../util/normalizeHue.js';\n\n// Based on: https://en.wikipedia.org/wiki/HSL_and_HSV#Converting_to_RGB\n\nexport default function convertHsvToRgb({ h, s, v, alpha }) {\n\th = normalizeHue(h);\n\tlet f = Math.abs(((h / 60) % 2) - 1);\n\tlet res;\n\tswitch (Math.floor(h / 60)) {\n\t\tcase 0:\n\t\t\tres = { r: v, g: v * (1 - s * f), b: v * (1 - s) };\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tres = { r: v * (1 - s * f), g: v, b: v * (1 - s) };\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tres = { r: v * (1 - s), g: v, b: v * (1 - s * f) };\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tres = { r: v * (1 - s), g: v * (1 - s * f), b: v };\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tres = { r: v * (1 - s * f), g: v * (1 - s), b: v };\n\t\t\tbreak;\n\t\tcase 5:\n\t\t\tres = { r: v, g: v * (1 - s), b: v * (1 - s * f) };\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tres = { r: v * (1 - s), g: v * (1 - s), b: v * (1 - s) };\n\t}\n\tres.mode = 'rgb';\n\tif (alpha !== undefined) res.alpha = alpha;\n\treturn res;\n}\n","// Based on: https://en.wikipedia.org/wiki/HSL_and_HSV#Formal_derivation\n\nexport default function convertRgbToHsv({ r, g, b, alpha }) {\n\tlet M = Math.max(r, g, b),\n\t\tm = Math.min(r, g, b);\n\tlet res = {\n\t\tmode: 'hsv',\n\t\ts: M === 0 ? 0 : 1 - m / M,\n\t\tv: M\n\t};\n\tif (M - m !== 0)\n\t\tres.h =\n\t\t\t(M === r\n\t\t\t\t? (g - b) / (M - m) + (g < b) * 6\n\t\t\t\t: M === g\n\t\t\t\t? (b - r) / (M - m) + 2\n\t\t\t\t: (r - g) / (M - m) + 4) * 60;\n\tif (alpha !== undefined) res.alpha = alpha;\n\treturn res;\n}\n","import convertHsvToRgb from './convertHsvToRgb.js';\nimport convertRgbToHsv from './convertRgbToHsv.js';\nimport { fixupHueShorter } from '../fixup/hue.js';\nimport { fixupAlpha } from '../fixup/alpha.js';\nimport { interpolatorLinear } from '../interpolate/linear.js';\nimport { differenceHueSaturation } from '../difference.js';\nimport { averageAngle } from '../average.js';\n\nconst definition = {\n\tmode: 'hsv',\n\n\ttoMode: {\n\t\trgb: convertHsvToRgb\n\t},\n\n\tparse: ['--hsv'],\n\tserialize: '--hsv',\n\n\tfromMode: {\n\t\trgb: convertRgbToHsv\n\t},\n\n\tchannels: ['h', 's', 'v', 'alpha'],\n\n\tranges: {\n\t\th: [0, 360]\n\t},\n\n\tinterpolate: {\n\t\th: { use: interpolatorLinear, fixup: fixupHueShorter },\n\t\ts: interpolatorLinear,\n\t\tv: interpolatorLinear,\n\t\talpha: { use: interpolatorLinear, fixup: fixupAlpha }\n\t},\n\n\tdifference: {\n\t\th: differenceHueSaturation\n\t},\n\n\taverage: {\n\t\th: averageAngle\n\t}\n};\n\nexport default definition;\n","/*\n\tHWB to RGB converter\n\t--------------------\n\n\tReferences:\n\t\t* https://drafts.csswg.org/css-color/#hwb-to-rgb\n\t\t* https://en.wikipedia.org/wiki/HWB_color_model\n\t\t* http://alvyray.com/Papers/CG/HWB_JGTv208.pdf\n */\n\nimport convertHsvToRgb from '../hsv/convertHsvToRgb.js';\n\nexport default function convertHwbToRgb({ h, w, b, alpha }) {\n\t// normalize w + b to 1\n\tif (w + b > 1) {\n\t\tlet s = w + b;\n\t\tw /= s;\n\t\tb /= s;\n\t}\n\treturn convertHsvToRgb({\n\t\th: h,\n\t\ts: b === 1 ? 1 : 1 - w / (1 - b),\n\t\tv: 1 - b,\n\t\talpha: alpha\n\t});\n}\n","/*\n\tRGB to HWB converter\n\t--------------------\n\n\tReferences:\n\t\t* https://drafts.csswg.org/css-color/#hwb-to-rgb\n\t\t* https://en.wikipedia.org/wiki/HWB_color_model\n\t\t* http://alvyray.com/Papers/CG/HWB_JGTv208.pdf\n */\n\nimport convertRgbToHsv from '../hsv/convertRgbToHsv.js';\n\nexport default function convertRgbToHwb(rgba) {\n\tlet hsv = convertRgbToHsv(rgba);\n\tif (hsv === undefined) return undefined;\n\tlet res = {\n\t\tmode: 'hwb',\n\t\tw: (1 - hsv.s) * hsv.v,\n\t\tb: 1 - hsv.v\n\t};\n\tif (hsv.h !== undefined) res.h = hsv.h;\n\tif (hsv.alpha !== undefined) res.alpha = hsv.alpha;\n\treturn res;\n}\n","import convertHwbToRgb from './convertHwbToRgb.js';\nimport convertRgbToHwb from './convertRgbToHwb.js';\nimport parseHwb from './parseHwb.js';\nimport { fixupHueShorter } from '../fixup/hue.js';\nimport { fixupAlpha } from '../fixup/alpha.js';\nimport { interpolatorLinear } from '../interpolate/linear.js';\nimport { differenceHueNaive } from '../difference.js';\nimport { averageAngle } from '../average.js';\n\nconst definition = {\n\tmode: 'hwb',\n\n\ttoMode: {\n\t\trgb: convertHwbToRgb\n\t},\n\n\tfromMode: {\n\t\trgb: convertRgbToHwb\n\t},\n\n\tchannels: ['h', 'w', 'b', 'alpha'],\n\n\tranges: {\n\t\th: [0, 360]\n\t},\n\n\tparse: [parseHwb],\n\tserialize: c =>\n\t\t`hwb(${c.h || 0} ${c.w * 100}% ${c.b * 100}%${\n\t\t\tc.alpha < 1 ? ` / ${c.alpha}` : ''\n\t\t})`,\n\n\tinterpolate: {\n\t\th: { use: interpolatorLinear, fixup: fixupHueShorter },\n\t\tw: interpolatorLinear,\n\t\tb: interpolatorLinear,\n\t\talpha: { use: interpolatorLinear, fixup: fixupAlpha }\n\t},\n\n\tdifference: {\n\t\th: differenceHueNaive\n\t},\n\n\taverage: {\n\t\th: averageAngle\n\t}\n};\n\nexport default definition;\n","import { hue_none, per_none, num_per_none, s } from '../util/regex.js';\nimport hueToDeg from '../util/hue.js';\n\n/*\n\thwb() regular expressions.\n\tReference: https://drafts.csswg.org/css-color/#the-hwb-notation\n */\nconst hwb = new RegExp(\n\t`^hwb\\\\(\\\\s*${hue_none}${s}${per_none}${s}${per_none}\\\\s*(?:\\\\/\\\\s*${num_per_none}\\\\s*)?\\\\)$`\n);\n\nconst parseHwb = color => {\n\tlet match = color.match(hwb);\n\tif (!match) {\n\t\treturn undefined;\n\t}\n\n\tlet res = { mode: 'hwb' };\n\n\tif (match[3] !== undefined) {\n\t\tres.h = +match[3];\n\t} else if (match[1] !== undefined && match[2] !== undefined) {\n\t\tres.h = hueToDeg(match[1], match[2]);\n\t}\n\n\tif (match[4] !== undefined) {\n\t\tres.w = match[4] / 100;\n\t}\n\tif (match[5] !== undefined) {\n\t\tres.b = match[5] / 100;\n\t}\n\n\tif (match[6] !== undefined) {\n\t\tres.alpha = match[6] / 100;\n\t} else if (match[7] !== undefined) {\n\t\tres.alpha = +match[7];\n\t}\n\treturn res;\n};\n\nexport default parseHwb;\n","const lerp = (a, b, t) => a + t * (b - a);\n\nexport default lerp;\n","import lerp from './lerp.js';\nimport { interpolatorPiecewise } from './piecewise.js';\n\nexport const interpolatorLinear = interpolatorPiecewise(lerp);\n","const get_classes = arr => {\n\tlet classes = [];\n\tfor (let i = 0; i < arr.length - 1; i++) {\n\t\tlet a = arr[i];\n\t\tlet b = arr[i + 1];\n\t\tif (a === undefined && b === undefined) {\n\t\t\tclasses.push(undefined);\n\t\t} else if (a !== undefined && b !== undefined) {\n\t\t\tclasses.push([a, b]);\n\t\t} else {\n\t\t\tclasses.push(a !== undefined ? [a, a] : [b, b]);\n\t\t}\n\t}\n\treturn classes;\n};\n\nconst interpolatorPiecewise = interpolator => arr => {\n\tlet classes = get_classes(arr);\n\treturn t => {\n\t\tlet cls = t * classes.length;\n\t\tlet idx = t >= 1 ? classes.length - 1 : Math.max(Math.floor(cls), 0);\n\t\tlet pair = classes[idx];\n\t\treturn pair === undefined\n\t\t\t? undefined\n\t\t\t: interpolator(pair[0], pair[1], cls - idx);\n\t};\n};\n\nexport { interpolatorPiecewise };\n","import convertXyz65ToRgb from '../xyz65/convertXyz65ToRgb.js';\nimport convertJabToXyz65 from './convertJabToXyz65.js';\n\nconst convertJabToRgb = color => convertXyz65ToRgb(convertJabToXyz65(color));\n\nexport default convertJabToRgb;\n","const n = 0.1593017578125; // = 2610 / Math.pow(2, 14);\nconst p = 134.03437499999998; // = 1.7 * 2523 / Math.pow(2, 5);\nconst c1 = 0.8359375; // = 3424 / Math.pow(2, 12);\nconst c2 = 18.8515625; // = 2413 / Math.pow(2, 7);\nconst c3 = 18.6875; // = 2392 / Math.pow(2, 7);\nconst d0 = 1.6295499532821566e-11;\n\n/* `v` may be negative, in which case return 0 instead of NaN */\nconst pq_inv = v => {\n\tlet vp = Math.pow(v, 1 / p);\n\treturn 10000 * Math.pow((c1 - vp) / (c3 * vp - c2), 1 / n) || 0;\n};\n\nconst rel = v => v / 203;\n\nconst convertJabToXyz65 = ({ j, a, b, alpha }) => {\n\tlet i = (j + d0) / (0.44 + 0.56 * (j + d0));\n\n\tlet l = pq_inv(i + 0.13860504 * a + 0.058047316 * b);\n\tlet m = pq_inv(i - 0.13860504 * a - 0.058047316 * b);\n\tlet s = pq_inv(i - 0.096019242 * a - 0.8118919 * b);\n\n\tlet res = {\n\t\tmode: 'xyz65',\n\t\tx: rel(\n\t\t\t1.661373024652174 * l -\n\t\t\t\t0.914523081304348 * m +\n\t\t\t\t0.23136208173913045 * s\n\t\t),\n\t\ty: rel(\n\t\t\t-0.3250758611844533 * l +\n\t\t\t\t1.571847026732543 * m -\n\t\t\t\t0.21825383453227928 * s\n\t\t),\n\t\tz: rel(-0.090982811 * l - 0.31272829 * m + 1.5227666 * s)\n\t};\n\n\tif (alpha !== undefined) {\n\t\tres.alpha = alpha;\n\t}\n\n\treturn res;\n};\n\nexport default convertJabToXyz65;\n","/*\n\tConvert sRGB to JzAzBz.\n\n\tFor achromatic sRGB colors, adjust the equivalent JzAzBz color\n\tto be achromatic as well, insteading of having a very slight chroma.\n */\n\nimport convertXyz65ToJab from './convertXyz65ToJab.js';\nimport convertRgbToXyz65 from '../xyz65/convertRgbToXyz65.js';\n\nconst convertRgbToJab = rgb => {\n\tlet res = convertXyz65ToJab(convertRgbToXyz65(rgb));\n\tif (rgb.r === rgb.b && rgb.b === rgb.g) {\n\t\tres.a = res.b = 0;\n\t}\n\treturn res;\n};\n\nexport default convertRgbToJab;\n","const n = 0.1593017578125; // = 2610 / Math.pow(2, 14);\nconst p = 134.03437499999998; // = 1.7 * 2523 / Math.pow(2, 5);\nconst c1 = 0.8359375; // = 3424 / Math.pow(2, 12);\nconst c2 = 18.8515625; // = 2413 / Math.pow(2, 7);\nconst c3 = 18.6875; // = 2392 / Math.pow(2, 7);\nconst d0 = 1.6295499532821566e-11;\n\n/* `v` may be negative, in which case return 0 instead of NaN */\nconst pq = v => {\n\tlet vn = Math.pow(v / 10000, n);\n\treturn Math.pow((c1 + c2 * vn) / (1 + c3 * vn), p) || 0;\n};\n\n// Convert to Absolute XYZ\nconst abs = v => Math.max(v * 203, 0);\n\nconst convertXyz65ToJab = ({ x, y, z, alpha }) => {\n\tx = abs(x);\n\ty = abs(y);\n\tz = abs(z);\n\n\tlet xp = 1.15 * x - 0.15 * z;\n\tlet yp = 0.66 * y + 0.34 * x;\n\n\tlet l = pq(0.41478972 * xp + 0.579999 * yp + 0.014648 * z);\n\tlet m = pq(-0.20151 * xp + 1.120649 * yp + 0.0531008 * z);\n\tlet s = pq(-0.0166008 * xp + 0.2648 * yp + 0.6684799 * z);\n\n\tlet i = (l + m) / 2;\n\n\tlet res = {\n\t\tmode: 'jab',\n\t\tj: (0.44 * i) / (1 - 0.56 * i) - d0,\n\t\ta: 3.524 * l - 4.066708 * m + 0.542708 * s,\n\t\tb: 0.199076 * l + 1.096799 * m - 1.295875 * s\n\t};\n\n\tif (alpha !== undefined) {\n\t\tres.alpha = alpha;\n\t}\n\n\treturn res;\n};\n\nexport default convertXyz65ToJab;\n","/*\n\tThe JzAzBz color space.\n\n\tBased on:\n\n\tMuhammad Safdar, Guihua Cui, Youn Jin Kim, and Ming Ronnier Luo, \n\t\"Perceptually uniform color space for image signals \n\tincluding high dynamic range and wide gamut,\" \n\tOpt. Express 25, 15131-15151 (2017) \n\n\thttps://doi.org/10.1364/OE.25.015131\n */\n\nimport convertXyz65ToJab from './convertXyz65ToJab.js';\nimport convertJabToXyz65 from './convertJabToXyz65.js';\nimport convertRgbToJab from './convertRgbToJab.js';\nimport convertJabToRgb from './convertJabToRgb.js';\n\nimport { interpolatorLinear } from '../interpolate/linear.js';\nimport { fixupAlpha } from '../fixup/alpha.js';\n\nconst definition = {\n\tmode: 'jab',\n\tchannels: ['j', 'a', 'b', 'alpha'],\n\n\tparse: ['--jzazbz'],\n\tserialize: '--jzazbz',\n\n\tfromMode: {\n\t\trgb: convertRgbToJab,\n\t\txyz65: convertXyz65ToJab\n\t},\n\n\ttoMode: {\n\t\trgb: convertJabToRgb,\n\t\txyz65: convertJabToXyz65\n\t},\n\n\tranges: {\n\t\tj: [0, 0.222],\n\t\ta: [-0.109, 0.129],\n\t\tb: [-0.185, 0.134]\n\t},\n\n\tinterpolate: {\n\t\tj: interpolatorLinear,\n\t\ta: interpolatorLinear,\n\t\tb: interpolatorLinear,\n\t\talpha: { use: interpolatorLinear, fixup: fixupAlpha }\n\t}\n};\n\nexport default definition;\n","import normalizeHue from '../util/normalizeHue.js';\n\nconst convertJabToJch = ({ j, a, b, alpha }) => {\n\tlet c = Math.sqrt(a * a + b * b);\n\tlet res = {\n\t\tmode: 'jch',\n\t\tj,\n\t\tc\n\t};\n\tif (c) {\n\t\tres.h = normalizeHue((Math.atan2(b, a) * 180) / Math.PI);\n\t}\n\tif (alpha !== undefined) {\n\t\tres.alpha = alpha;\n\t}\n\treturn res;\n};\n\nexport default convertJabToJch;\n","const convertJchToJab = ({ j, c, h, alpha }) => {\n\tlet res = {\n\t\tmode: 'jab',\n\t\tj,\n\t\ta: c ? c * Math.cos((h / 180) * Math.PI) : 0,\n\t\tb: c ? c * Math.sin((h / 180) * Math.PI) : 0\n\t};\n\tif (alpha !== undefined) res.alpha = alpha;\n\treturn res;\n};\n\nexport default convertJchToJab;\n","import convertJabToJch from './convertJabToJch.js';\nimport convertJchToJab from './convertJchToJab.js';\nimport convertJabToRgb from '../jab/convertJabToRgb.js';\nimport convertRgbToJab from '../jab/convertRgbToJab.js';\n\nimport { fixupHueShorter } from '../fixup/hue.js';\nimport { fixupAlpha } from '../fixup/alpha.js';\nimport { interpolatorLinear } from '../interpolate/linear.js';\nimport { differenceHueChroma } from '../difference.js';\nimport { averageAngle } from '../average.js';\n\nconst definition = {\n\tmode: 'jch',\n\n\tparse: ['--jzczhz'],\n\tserialize: '--jzczhz',\n\n\ttoMode: {\n\t\tjab: convertJchToJab,\n\t\trgb: c => convertJabToRgb(convertJchToJab(c))\n\t},\n\n\tfromMode: {\n\t\trgb: c => convertJabToJch(convertRgbToJab(c)),\n\t\tjab: convertJabToJch\n\t},\n\n\tchannels: ['j', 'c', 'h', 'alpha'],\n\n\tranges: {\n\t\tj: [0, 0.221],\n\t\tc: [0, 0.19],\n\t\th: [0, 360]\n\t},\n\n\tinterpolate: {\n\t\th: { use: interpolatorLinear, fixup: fixupHueShorter },\n\t\tc: interpolatorLinear,\n\t\tj: interpolatorLinear,\n\t\talpha: { use: interpolatorLinear, fixup: fixupAlpha }\n\t},\n\n\tdifference: {\n\t\th: differenceHueChroma\n\t},\n\n\taverage: {\n\t\th: averageAngle\n\t}\n};\n\nexport default definition;\n","import convertLab65ToXyz65 from './convertLab65ToXyz65.js';\nimport convertXyz65ToRgb from '../xyz65/convertXyz65ToRgb.js';\n\nconst convertLab65ToRgb = lab => convertXyz65ToRgb(convertLab65ToXyz65(lab));\n\nexport default convertLab65ToRgb;\n","import { Xn, Yn, Zn, k, e } from '../xyz65/constants.js';\n\nlet fn = v => (Math.pow(v, 3) > e ? Math.pow(v, 3) : (116 * v - 16) / k);\n\nconst convertLab65ToXyz65 = ({ l, a, b, alpha }) => {\n\tlet fy = (l + 16) / 116;\n\tlet fx = a / 500 + fy;\n\tlet fz = fy - b / 200;\n\n\tlet res = {\n\t\tmode: 'xyz65',\n\t\tx: fn(fx) * Xn,\n\t\ty: fn(fy) * Yn,\n\t\tz: fn(fz) * Zn\n\t};\n\n\tif (alpha !== undefined) {\n\t\tres.alpha = alpha;\n\t}\n\n\treturn res;\n};\n\nexport default convertLab65ToXyz65;\n","import convertRgbToXyz65 from '../xyz65/convertRgbToXyz65.js';\nimport convertXyz65ToLab65 from './convertXyz65ToLab65.js';\n\nconst convertRgbToLab65 = rgb => {\n\tlet res = convertXyz65ToLab65(convertRgbToXyz65(rgb));\n\n\t// Fixes achromatic RGB colors having a _slight_ chroma due to floating-point errors\n\t// and approximated computations in sRGB <-> CIELab.\n\t// See: https://github.com/d3/d3-color/pull/46\n\tif (rgb.r === rgb.b && rgb.b === rgb.g) {\n\t\tres.a = res.b = 0;\n\t}\n\treturn res;\n};\n\nexport default convertRgbToLab65;\n","import { Xn, Yn, Zn, k, e } from '../xyz65/constants.js';\n\nconst f = value => (value > e ? Math.cbrt(value) : (k * value + 16) / 116);\n\nconst convertXyz65ToLab65 = ({ x, y, z, alpha }) => {\n\tlet f0 = f(x / Xn);\n\tlet f1 = f(y / Yn);\n\tlet f2 = f(z / Zn);\n\n\tlet res = {\n\t\tmode: 'lab65',\n\t\tl: 116 * f1 - 16,\n\t\ta: 500 * (f0 - f1),\n\t\tb: 200 * (f1 - f2)\n\t};\n\n\tif (alpha !== undefined) {\n\t\tres.alpha = alpha;\n\t}\n\n\treturn res;\n};\n\nexport default convertXyz65ToLab65;\n","import convertLab65ToRgb from './convertLab65ToRgb.js';\nimport convertLab65ToXyz65 from './convertLab65ToXyz65.js';\nimport convertRgbToLab65 from './convertRgbToLab65.js';\nimport convertXyz65ToLab65 from './convertXyz65ToLab65.js';\nimport lab from '../lab/definition.js';\n\nconst definition = {\n\t...lab,\n\tmode: 'lab65',\n\n\tparse: ['--lab-d65'],\n\tserialize: '--lab-d65',\n\n\ttoMode: {\n\t\txyz65: convertLab65ToXyz65,\n\t\trgb: convertLab65ToRgb\n\t},\n\n\tfromMode: {\n\t\txyz65: convertXyz65ToLab65,\n\t\trgb: convertRgbToLab65\n\t},\n\n\tranges: {\n\t\tl: [0, 100],\n\t\ta: [-86.182, 98.234],\n\t\tb: [-107.86, 94.477]\n\t}\n};\n\nexport default definition;\n","import convertLabToXyz50 from './convertLabToXyz50.js';\nimport convertXyz50ToRgb from '../xyz50/convertXyz50ToRgb.js';\n\nconst convertLabToRgb = lab => convertXyz50ToRgb(convertLabToXyz50(lab));\n\nexport default convertLabToRgb;\n","import { Xn, Yn, Zn, k, e } from '../xyz50/constants.js';\n\nlet fn = v => (Math.pow(v, 3) > e ? Math.pow(v, 3) : (116 * v - 16) / k);\n\nconst convertLabToXyz50 = ({ l, a, b, alpha }) => {\n\tlet fy = (l + 16) / 116;\n\tlet fx = a / 500 + fy;\n\tlet fz = fy - b / 200;\n\n\tlet res = {\n\t\tmode: 'xyz50',\n\t\tx: fn(fx) * Xn,\n\t\ty: fn(fy) * Yn,\n\t\tz: fn(fz) * Zn\n\t};\n\n\tif (alpha !== undefined) {\n\t\tres.alpha = alpha;\n\t}\n\n\treturn res;\n};\n\nexport default convertLabToXyz50;\n","import convertRgbToXyz50 from '../xyz50/convertRgbToXyz50.js';\nimport convertXyz50ToLab from './convertXyz50ToLab.js';\n\nconst convertRgbToLab = rgb => {\n\tlet res = convertXyz50ToLab(convertRgbToXyz50(rgb));\n\n\t// Fixes achromatic RGB colors having a _slight_ chroma due to floating-point errors\n\t// and approximated computations in sRGB <-> CIELab.\n\t// See: https://github.com/d3/d3-color/pull/46\n\tif (rgb.r === rgb.b && rgb.b === rgb.g) {\n\t\tres.a = res.b = 0;\n\t}\n\treturn res;\n};\n\nexport default convertRgbToLab;\n","import { Xn, Yn, Zn, k, e } from '../xyz50/constants.js';\n\nconst f = value => (value > e ? Math.cbrt(value) : (k * value + 16) / 116);\n\nconst convertXyz50ToLab = ({ x, y, z, alpha }) => {\n\tlet f0 = f(x / Xn);\n\tlet f1 = f(y / Yn);\n\tlet f2 = f(z / Zn);\n\n\tlet res = {\n\t\tmode: 'lab',\n\t\tl: 116 * f1 - 16,\n\t\ta: 500 * (f0 - f1),\n\t\tb: 200 * (f1 - f2)\n\t};\n\n\tif (alpha !== undefined) {\n\t\tres.alpha = alpha;\n\t}\n\n\treturn res;\n};\n\nexport default convertXyz50ToLab;\n","import convertLabToRgb from './convertLabToRgb.js';\nimport convertLabToXyz50 from './convertLabToXyz50.js';\nimport convertRgbToLab from './convertRgbToLab.js';\nimport convertXyz50ToLab from './convertXyz50ToLab.js';\nimport parseLab from './parseLab.js';\nimport { interpolatorLinear } from '../interpolate/linear.js';\nimport { fixupAlpha } from '../fixup/alpha.js';\n\nconst definition = {\n\tmode: 'lab',\n\n\ttoMode: {\n\t\txyz50: convertLabToXyz50,\n\t\trgb: convertLabToRgb\n\t},\n\n\tfromMode: {\n\t\txyz50: convertXyz50ToLab,\n\t\trgb: convertRgbToLab\n\t},\n\n\tchannels: ['l', 'a', 'b', 'alpha'],\n\n\tranges: {\n\t\tl: [0, 100],\n\t\ta: [-79.287, 93.55],\n\t\tb: [-112.029, 93.388]\n\t},\n\n\tparse: [parseLab],\n\tserialize: c =>\n\t\t`lab(${c.l !== undefined ? c.l + '%' : 'none'} ${\n\t\t\tc.a !== undefined ? c.a : 'none'\n\t\t} ${c.b !== undefined ? c.b : 'none'}${\n\t\t\tc.alpha < 1 ? ` / ${c.alpha}` : ''\n\t\t})`,\n\n\tinterpolate: {\n\t\tl: interpolatorLinear,\n\t\ta: interpolatorLinear,\n\t\tb: interpolatorLinear,\n\t\talpha: { use: interpolatorLinear, fixup: fixupAlpha }\n\t}\n};\n\nexport default definition;\n","import { num_none, per_none, num_per_none, s } from '../util/regex.js';\n\n/*\n\tlab() and lch() regular expressions.\n\tReference: https://drafts.csswg.org/css-color/#lab-colors\n */\nconst lab = new RegExp(\n\t`^lab\\\\(\\\\s*${per_none}${s}${num_none}${s}${num_none}\\\\s*(?:\\\\/\\\\s*${num_per_none}\\\\s*)?\\\\)$`\n);\n\nconst parseLab = color => {\n\tlet match = color.match(lab);\n\tif (!match) {\n\t\treturn undefined;\n\t}\n\n\tlet res = { mode: 'lab' };\n\n\tif (match[1] !== undefined) {\n\t\tres.l = +match[1];\n\t}\n\n\tif (match[2] !== undefined) {\n\t\tres.a = +match[2];\n\t}\n\n\tif (match[3] !== undefined) {\n\t\tres.b = +match[3];\n\t}\n\n\tif (match[4] !== undefined) {\n\t\tres.alpha = match[4] / 100;\n\t} else if (match[5] !== undefined) {\n\t\tres.alpha = +match[5];\n\t}\n\n\treturn res;\n};\n\nexport default parseLab;\n","import convertLabToLch from '../lch/convertLabToLch.js';\nimport convertLchToLab from '../lch/convertLchToLab.js';\nimport convertLab65ToRgb from '../lab65/convertLab65ToRgb.js';\nimport convertRgbToLab65 from '../lab65/convertRgbToLab65.js';\nimport lch from '../lch/definition.js';\n\nconst definition = {\n\t...lch,\n\tmode: 'lch65',\n\n\tparse: ['--lch-d65'],\n\tserialize: '--lch-d65',\n\n\ttoMode: {\n\t\tlab65: c => convertLchToLab(c, 'lab65'),\n\t\trgb: c => convertLab65ToRgb(convertLchToLab(c, 'lab65'))\n\t},\n\n\tfromMode: {\n\t\trgb: c => convertLabToLch(convertRgbToLab65(c), 'lch65'),\n\t\tlab65: c => convertLabToLch(c, 'lch65')\n\t},\n\n\tranges: {\n\t\tl: [0, 100],\n\t\tc: [0, 133.807],\n\t\th: [0, 360]\n\t}\n};\n\nexport default definition;\n","import normalizeHue from '../util/normalizeHue.js';\n\n/* \n\tReferences: \n\t\t* https://drafts.csswg.org/css-color/#lab-to-lch\n\t\t* https://drafts.csswg.org/css-color/#color-conversion-code\n*/\nconst convertLabToLch = ({ l, a, b, alpha }, mode = 'lch') => {\n\tlet c = Math.sqrt(a * a + b * b);\n\tlet res = { mode, l, c };\n\tif (c) res.h = normalizeHue((Math.atan2(b, a) * 180) / Math.PI);\n\tif (alpha !== undefined) res.alpha = alpha;\n\treturn res;\n};\n\nexport default convertLabToLch;\n","/* \n\tReferences: \n\t\t* https://drafts.csswg.org/css-color/#lch-to-lab\n\t\t* https://drafts.csswg.org/css-color/#color-conversion-code\n*/\nconst convertLchToLab = ({ l, c, h, alpha }, mode = 'lab') => {\n\tlet res = {\n\t\tmode,\n\t\tl,\n\t\ta: c ? c * Math.cos((h / 180) * Math.PI) : 0,\n\t\tb: c ? c * Math.sin((h / 180) * Math.PI) : 0\n\t};\n\tif (alpha !== undefined) res.alpha = alpha;\n\treturn res;\n};\n\nexport default convertLchToLab;\n","import convertLabToLch from './convertLabToLch.js';\nimport convertLchToLab from './convertLchToLab.js';\nimport convertLabToRgb from '../lab/convertLabToRgb.js';\nimport convertRgbToLab from '../lab/convertRgbToLab.js';\nimport parseLch from './parseLch.js';\nimport { fixupHueShorter } from '../fixup/hue.js';\nimport { fixupAlpha } from '../fixup/alpha.js';\nimport { interpolatorLinear } from '../interpolate/linear.js';\nimport { differenceHueChroma } from '../difference.js';\nimport { averageAngle } from '../average.js';\n\nconst definition = {\n\tmode: 'lch',\n\n\ttoMode: {\n\t\tlab: convertLchToLab,\n\t\trgb: c => convertLabToRgb(convertLchToLab(c))\n\t},\n\n\tfromMode: {\n\t\trgb: c => convertLabToLch(convertRgbToLab(c)),\n\t\tlab: convertLabToLch\n\t},\n\n\tchannels: ['l', 'c', 'h', 'alpha'],\n\n\tranges: {\n\t\tl: [0, 100],\n\t\tc: [0, 131.207],\n\t\th: [0, 360]\n\t},\n\n\tparse: [parseLch],\n\tserialize: c =>\n\t\t`lch(${c.l !== undefined ? c.l + '%' : 'none'} ${\n\t\t\tc.c !== undefined ? c.c : 'none'\n\t\t} ${c.h || 0}${c.alpha < 1 ? ` / ${c.alpha}` : ''})`,\n\n\tinterpolate: {\n\t\th: { use: interpolatorLinear, fixup: fixupHueShorter },\n\t\tc: interpolatorLinear,\n\t\tl: interpolatorLinear,\n\t\talpha: { use: interpolatorLinear, fixup: fixupAlpha }\n\t},\n\n\tdifference: {\n\t\th: differenceHueChroma\n\t},\n\n\taverage: {\n\t\th: averageAngle\n\t}\n};\n\nexport default definition;\n","import hueToDeg from '../util/hue.js';\nimport {\n\thue_none,\n\tnum_none,\n\tper_none,\n\tnum_per_none,\n\ts\n} from '../util/regex.js';\n\nconst lch = new RegExp(\n\t`^lch\\\\(\\\\s*${per_none}${s}${num_none}${s}${hue_none}\\\\s*(?:\\\\/\\\\s*${num_per_none}\\\\s*)?\\\\)$`\n);\n\nconst parseLch = color => {\n\tlet match = color.match(lch);\n\n\tif (!match) {\n\t\treturn undefined;\n\t}\n\n\tlet res = { mode: 'lch' };\n\n\tif (match[1] !== undefined) {\n\t\tres.l = +match[1];\n\t}\n\n\tif (match[2] !== undefined) {\n\t\tres.c = Math.max(0, +match[2]);\n\t}\n\n\tif (match[5] !== undefined) {\n\t\tres.h = +match[5];\n\t} else if (match[3] !== undefined && match[4] !== undefined) {\n\t\tres.h = hueToDeg(match[3], match[4]);\n\t}\n\n\tif (match[6] !== undefined) {\n\t\tres.alpha = match[6] / 100;\n\t} else if (match[7] !== undefined) {\n\t\tres.alpha = +match[7];\n\t}\n\n\treturn res;\n};\n\nexport default parseLch;\n","const convertLchuvToLuv = ({ l, c, h, alpha }) => {\n\tlet res = {\n\t\tmode: 'luv',\n\t\tl: l,\n\t\tu: c ? c * Math.cos((h / 180) * Math.PI) : 0,\n\t\tv: c ? c * Math.sin((h / 180) * Math.PI) : 0\n\t};\n\tif (alpha !== undefined) {\n\t\tres.alpha = alpha;\n\t}\n\treturn res;\n};\n\nexport default convertLchuvToLuv;\n","import normalizeHue from '../util/normalizeHue.js';\n\nconst convertLuvToLchuv = ({ l, u, v, alpha }) => {\n\tlet c = Math.sqrt(u * u + v * v);\n\tlet res = {\n\t\tmode: 'lchuv',\n\t\tl: l,\n\t\tc: c\n\t};\n\tif (c) {\n\t\tres.h = normalizeHue((Math.atan2(v, u) * 180) / Math.PI);\n\t}\n\tif (alpha !== undefined) {\n\t\tres.alpha = alpha;\n\t}\n\treturn res;\n};\n\nexport default convertLuvToLchuv;\n","/*\n\tCIELChuv color space\n\t--------------------\n\n\tReference: \n\n\t\thttps://en.wikipedia.org/wiki/CIELUV\n */\n\nimport convertLuvToLchuv from './convertLuvToLchuv.js';\nimport convertLchuvToLuv from './convertLchuvToLuv.js';\nimport convertXyz50ToLuv from '../luv/convertXyz50ToLuv.js';\nimport convertLuvToXyz50 from '../luv/convertLuvToXyz50.js';\nimport convertXyz50ToRgb from '../xyz50/convertXyz50ToRgb.js';\nimport convertRgbToXyz50 from '../xyz50/convertRgbToXyz50.js';\n\nimport { fixupHueShorter } from '../fixup/hue.js';\nimport { fixupAlpha } from '../fixup/alpha.js';\nimport { interpolatorLinear } from '../interpolate/linear.js';\nimport { differenceHueChroma } from '../difference.js';\nimport { averageAngle } from '../average.js';\n\nconst convertRgbToLchuv = rgb =>\n\tconvertLuvToLchuv(convertXyz50ToLuv(convertRgbToXyz50(rgb)));\nconst convertLchuvToRgb = lchuv =>\n\tconvertXyz50ToRgb(convertLuvToXyz50(convertLchuvToLuv(lchuv)));\n\nconst definition = {\n\tmode: 'lchuv',\n\n\ttoMode: {\n\t\tluv: convertLchuvToLuv,\n\t\trgb: convertLchuvToRgb\n\t},\n\n\tfromMode: {\n\t\trgb: convertRgbToLchuv,\n\t\tluv: convertLuvToLchuv\n\t},\n\n\tchannels: ['l', 'c', 'h', 'alpha'],\n\n\tparse: ['--lchuv'],\n\tserialize: '--lchuv',\n\n\tranges: {\n\t\tl: [0, 100],\n\t\tc: [0, 176.956],\n\t\th: [0, 360]\n\t},\n\n\tinterpolate: {\n\t\th: { use: interpolatorLinear, fixup: fixupHueShorter },\n\t\tc: interpolatorLinear,\n\t\tl: interpolatorLinear,\n\t\talpha: { use: interpolatorLinear, fixup: fixupAlpha }\n\t},\n\n\tdifference: {\n\t\th: differenceHueChroma\n\t},\n\n\taverage: {\n\t\th: averageAngle\n\t}\n};\n\nexport default definition;\n","const fn = c => {\n\tconst abs = Math.abs(c);\n\tif (abs > 0.0031308) {\n\t\treturn (Math.sign(c) || 1) * (1.055 * Math.pow(abs, 1 / 2.4) - 0.055);\n\t}\n\treturn c * 12.92;\n};\n\nconst convertLrgbToRgb = ({ r, g, b, alpha }, mode = 'rgb') => {\n\tlet res = {\n\t\tmode,\n\t\tr: fn(r),\n\t\tg: fn(g),\n\t\tb: fn(b)\n\t};\n\tif (alpha !== undefined) res.alpha = alpha;\n\treturn res;\n};\n\nexport default convertLrgbToRgb;\n","const fn = c => {\n\tconst abs = Math.abs(c);\n\tif (abs < 0.04045) {\n\t\treturn c / 12.92;\n\t}\n\treturn (Math.sign(c) || 1) * Math.pow((abs + 0.055) / 1.055, 2.4);\n};\n\nconst convertRgbToLrgb = ({ r, g, b, alpha }) => {\n\tlet res = {\n\t\tmode: 'lrgb',\n\t\tr: fn(r),\n\t\tg: fn(g),\n\t\tb: fn(b)\n\t};\n\tif (alpha !== undefined) res.alpha = alpha;\n\treturn res;\n};\n\nexport default convertRgbToLrgb;\n","import rgb from '../rgb/definition.js';\nimport convertRgbToLrgb from './convertRgbToLrgb.js';\nimport convertLrgbToRgb from './convertLrgbToRgb.js';\n\nconst definition = {\n\t...rgb,\n\tmode: 'lrgb',\n\n\ttoMode: {\n\t\trgb: convertLrgbToRgb\n\t},\n\n\tfromMode: {\n\t\trgb: convertRgbToLrgb\n\t},\n\n\tparse: ['--srgb-linear'],\n\tserialize: '--srgb-linear'\n};\n\nexport default definition;\n","import { Xn, Yn, Zn, k } from '../xyz50/constants.js';\n\nexport const u_fn = (x, y, z) => (4 * x) / (x + 15 * y + 3 * z);\nexport const v_fn = (x, y, z) => (9 * y) / (x + 15 * y + 3 * z);\n\nexport const un = u_fn(Xn, Yn, Zn);\nexport const vn = v_fn(Xn, Yn, Zn);\n\nconst convertLuvToXyz50 = ({ l, u, v, alpha }) => {\n\tlet up = u / (13 * l) + un;\n\tlet vp = v / (13 * l) + vn;\n\tlet y = Yn * (l <= 8 ? l / k : Math.pow((l + 16) / 116, 3));\n\tlet x = (y * (9 * up)) / (4 * vp);\n\tlet z = (y * (12 - 3 * up - 20 * vp)) / (4 * vp);\n\n\tlet res = { mode: 'xyz50', x, y, z };\n\tif (alpha !== undefined) {\n\t\tres.alpha = alpha;\n\t}\n\n\treturn res;\n};\n\nexport default convertLuvToXyz50;\n","import { Xn, Yn, Zn, k, e } from '../xyz50/constants.js';\n\nexport const u_fn = (x, y, z) => (4 * x) / (x + 15 * y + 3 * z);\nexport const v_fn = (x, y, z) => (9 * y) / (x + 15 * y + 3 * z);\n\nexport const un = u_fn(Xn, Yn, Zn);\nexport const vn = v_fn(Xn, Yn, Zn);\n\nconst l_fn = value => (value <= e ? k * value : 116 * Math.cbrt(value) - 16);\n\nconst convertXyz50ToLuv = ({ x, y, z, alpha }) => {\n\tlet l = l_fn(y / Yn);\n\tlet u = u_fn(x, y, z);\n\tlet v = v_fn(x, y, z);\n\n\t// guard against NaNs produced by `xyz(0 0 0)` black\n\tif (!isFinite(u) || !isFinite(v)) {\n\t\tl = u = v = 0;\n\t} else {\n\t\tu = 13 * l * (u - un);\n\t\tv = 13 * l * (v - vn);\n\t}\n\n\tlet res = {\n\t\tmode: 'luv',\n\t\tl,\n\t\tu,\n\t\tv\n\t};\n\n\tif (alpha !== undefined) {\n\t\tres.alpha = alpha;\n\t}\n\n\treturn res;\n};\n\nexport default convertXyz50ToLuv;\n","/*\n\tCIELUV color space\n\t------------------\n\n\tReference: \n\n\t\thttps://en.wikipedia.org/wiki/CIELUV\n */\n\nimport convertXyz50ToLuv from './convertXyz50ToLuv.js';\nimport convertLuvToXyz50 from './convertLuvToXyz50.js';\nimport convertXyz50ToRgb from '../xyz50/convertXyz50ToRgb.js';\nimport convertRgbToXyz50 from '../xyz50/convertRgbToXyz50.js';\n\nimport { interpolatorLinear } from '../interpolate/linear.js';\nimport { fixupAlpha } from '../fixup/alpha.js';\n\nconst definition = {\n\tmode: 'luv',\n\n\ttoMode: {\n\t\txyz50: convertLuvToXyz50,\n\t\trgb: luv => convertXyz50ToRgb(convertLuvToXyz50(luv))\n\t},\n\n\tfromMode: {\n\t\txyz50: convertXyz50ToLuv,\n\t\trgb: rgb => convertXyz50ToLuv(convertRgbToXyz50(rgb))\n\t},\n\n\tchannels: ['l', 'u', 'v', 'alpha'],\n\n\tparse: ['--luv'],\n\tserialize: '--luv',\n\n\tranges: {\n\t\tl: [0, 100],\n\t\tu: [-84.936, 175.042],\n\t\tv: [-125.882, 87.243]\n\t},\n\n\tinterpolate: {\n\t\tl: interpolatorLinear,\n\t\tu: interpolatorLinear,\n\t\tv: interpolatorLinear,\n\t\talpha: { use: interpolatorLinear, fixup: fixupAlpha }\n\t}\n};\n\nexport default definition;\n","import converter from './converter.js';\n\nconst converters = {};\nconst modes = {};\n\nconst parsers = [];\nconst colorProfiles = {};\n\nconst identity = v => v;\n\nconst useMode = definition => {\n\tconverters[definition.mode] = {\n\t\t...converters[definition.mode],\n\t\t...definition.toMode\n\t};\n\n\tObject.keys(definition.fromMode || {}).forEach(k => {\n\t\tif (!converters[k]) {\n\t\t\tconverters[k] = {};\n\t\t}\n\t\tconverters[k][definition.mode] = definition.fromMode[k];\n\t});\n\n\t// Color space channel ranges\n\tif (!definition.ranges) {\n\t\tdefinition.ranges = {};\n\t}\n\n\tif (!definition.difference) {\n\t\tdefinition.difference = {};\n\t}\n\n\tdefinition.channels.forEach(channel => {\n\t\t// undefined channel ranges default to the [0, 1] interval\n\t\tif (definition.ranges[channel] === undefined) {\n\t\t\tdefinition.ranges[channel] = [0, 1];\n\t\t}\n\n\t\tif (!definition.interpolate[channel]) {\n\t\t\tthrow new Error(`Missing interpolator for: ${channel}`);\n\t\t}\n\n\t\tif (typeof definition.interpolate[channel] === 'function') {\n\t\t\tdefinition.interpolate[channel] = {\n\t\t\t\tuse: definition.interpolate[channel]\n\t\t\t};\n\t\t}\n\n\t\tif (!definition.interpolate[channel].fixup) {\n\t\t\tdefinition.interpolate[channel].fixup = identity;\n\t\t}\n\t});\n\n\tmodes[definition.mode] = definition;\n\t(definition.parse || []).forEach(parser => {\n\t\tif (typeof parser === 'function') {\n\t\t\tuseParser(parser);\n\t\t} else if (typeof parser === 'string') {\n\t\t\tcolorProfiles[parser] = definition.mode;\n\t\t}\n\t});\n\n\treturn converter(definition.mode);\n};\n\nconst getMode = mode => modes[mode];\n\nconst useParser = parser => {\n\tconst idx = parsers.indexOf(parser);\n\tif (idx < 0) {\n\t\tparsers.push(parser);\n\t}\n};\n\nconst removeParser = parser => {\n\tconst idx = parsers.indexOf(parser);\n\tif (idx > 0) {\n\t\tparsers.splice(idx, 1);\n\t}\n};\n\nexport {\n\tuseMode,\n\tgetMode,\n\tuseParser,\n\tremoveParser,\n\tconverters,\n\tparsers,\n\tcolorProfiles\n};\n","/*\n\tAdapted from code by Björn Ottosson,\n\treleased under the MIT license:\n\n\tCopyright (c) 2021 Björn Ottosson\n\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of\n\tthis software and associated documentation files (the \"Software\"), to deal in\n\tthe Software without restriction, including without limitation the rights to\n\tuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n\tof the Software, and to permit persons to whom the Software is furnished to do\n\tso, subject to the following conditions:\n\n\tThe above copyright notice and this permission notice shall be included in all\n\tcopies or substantial portions of the Software.\n\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\tSOFTWARE.\n */\n\nimport { toe_inv, get_Cs } from './helpers.js';\n\nexport default function convertOkhslToOklab(hsl) {\n\tlet l = toe_inv(hsl.l);\n\n\tconst ret = { mode: 'oklab', l };\n\n\tif (hsl.alpha !== undefined) {\n\t\tret.alpha = hsl.alpha;\n\t}\n\n\tif (!hsl.s || hsl.l === 1) {\n\t\tret.a = ret.b = 0;\n\t\treturn ret;\n\t}\n\n\tlet a_ = Math.cos((hsl.h / 180) * Math.PI);\n\tlet b_ = Math.sin((hsl.h / 180) * Math.PI);\n\tlet [C_0, C_mid, C_max] = get_Cs(l, a_, b_);\n\tlet t, k_0, k_1, k_2;\n\tif (hsl.s < 0.8) {\n\t\tt = 1.25 * hsl.s;\n\t\tk_0 = 0;\n\t\tk_1 = 0.8 * C_0;\n\t\tk_2 = 1 - k_1 / C_mid;\n\t} else {\n\t\tt = 5 * (hsl.s - 0.8);\n\t\tk_0 = C_mid;\n\t\tk_1 = (0.2 * C_mid * C_mid * 1.25 * 1.25) / C_0;\n\t\tk_2 = 1 - k_1 / (C_max - C_mid);\n\t}\n\tlet C = k_0 + (t * k_1) / (1 - k_2 * t);\n\tret.a = C * a_;\n\tret.b = C * b_;\n\n\treturn ret;\n}\n","/*\n\tAdapted from code by Björn Ottosson,\n\treleased under the MIT license:\n\n\tCopyright (c) 2021 Björn Ottosson\n\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of\n\tthis software and associated documentation files (the \"Software\"), to deal in\n\tthe Software without restriction, including without limitation the rights to\n\tuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n\tof the Software, and to permit persons to whom the Software is furnished to do\n\tso, subject to the following conditions:\n\n\tThe above copyright notice and this permission notice shall be included in all\n\tcopies or substantial portions of the Software.\n\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\tSOFTWARE.\n */\n\nimport normalizeHue from '../util/normalizeHue.js';\nimport { get_Cs, toe } from './helpers.js';\n\nexport default function convertOklabToOkhsl(lab) {\n\tconst ret = { mode: 'okhsl', l: toe(lab.l) };\n\n\tif (lab.alpha !== undefined) {\n\t\tret.alpha = lab.alpha;\n\t}\n\tlet c = Math.sqrt(lab.a * lab.a + lab.b * lab.b);\n\tif (!c) {\n\t\tret.s = 0;\n\t\treturn ret;\n\t}\n\tlet [C_0, C_mid, C_max] = get_Cs(lab.l, lab.a / c, lab.b / c);\n\tlet s;\n\tif (c < C_mid) {\n\t\tlet k_0 = 0;\n\t\tlet k_1 = 0.8 * C_0;\n\t\tlet k_2 = 1 - k_1 / C_mid;\n\t\tlet t = (c - k_0) / (k_1 + k_2 * (c - k_0));\n\t\ts = t * 0.8;\n\t} else {\n\t\tlet k_0 = C_mid;\n\t\tlet k_1 = (0.2 * C_mid * C_mid * 1.25 * 1.25) / C_0;\n\t\tlet k_2 = 1 - k_1 / (C_max - C_mid);\n\t\tlet t = (c - k_0) / (k_1 + k_2 * (c - k_0));\n\t\ts = 0.8 + 0.2 * t;\n\t}\n\tif (s) {\n\t\tret.s = s;\n\t\tret.h = normalizeHue((Math.atan2(lab.b, lab.a) * 180) / Math.PI);\n\t}\n\treturn ret;\n}\n","/*\n\tAdapted from code by Björn Ottosson,\n\treleased under the MIT license:\n\n\tCopyright (c) 2021 Björn Ottosson\n\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of\n\tthis software and associated documentation files (the \"Software\"), to deal in\n\tthe Software without restriction, including without limitation the rights to\n\tuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n\tof the Software, and to permit persons to whom the Software is furnished to do\n\tso, subject to the following conditions:\n\n\tThe above copyright notice and this permission notice shall be included in all\n\tcopies or substantial portions of the Software.\n\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\tSOFTWARE.\n */\n\nimport convertOklabToLrgb from '../oklab/convertOklabToLrgb.js';\n\nexport function toe(x) {\n\tconst k_1 = 0.206;\n\tconst k_2 = 0.03;\n\tconst k_3 = (1 + k_1) / (1 + k_2);\n\treturn (\n\t\t0.5 *\n\t\t(k_3 * x -\n\t\t\tk_1 +\n\t\t\tMath.sqrt((k_3 * x - k_1) * (k_3 * x - k_1) + 4 * k_2 * k_3 * x))\n\t);\n}\n\nexport function toe_inv(x) {\n\tconst k_1 = 0.206;\n\tconst k_2 = 0.03;\n\tconst k_3 = (1 + k_1) / (1 + k_2);\n\treturn (x * x + k_1 * x) / (k_3 * (x + k_2));\n}\n\n// Finds the maximum saturation possible for a given hue that fits in sRGB\n// Saturation here is defined as S = C/L\n// a and b must be normalized so a^2 + b^2 == 1\nfunction compute_max_saturation(a, b) {\n\t// Max saturation will be when one of r, g or b goes below zero.\n\n\t// Select different coefficients depending on which component goes below zero first\n\tlet k0, k1, k2, k3, k4, wl, wm, ws;\n\n\tif (-1.88170328 * a - 0.80936493 * b > 1) {\n\t\t// Red component\n\t\tk0 = +1.19086277;\n\t\tk1 = +1.76576728;\n\t\tk2 = +0.59662641;\n\t\tk3 = +0.75515197;\n\t\tk4 = +0.56771245;\n\t\twl = +4.0767416621;\n\t\twm = -3.3077115913;\n\t\tws = +0.2309699292;\n\t} else if (1.81444104 * a - 1.19445276 * b > 1) {\n\t\t// Green component\n\t\tk0 = +0.73956515;\n\t\tk1 = -0.45954404;\n\t\tk2 = +0.08285427;\n\t\tk3 = +0.1254107;\n\t\tk4 = +0.14503204;\n\t\twl = -1.2684380046;\n\t\twm = +2.6097574011;\n\t\tws = -0.3413193965;\n\t} else {\n\t\t// Blue component\n\t\tk0 = +1.35733652;\n\t\tk1 = -0.00915799;\n\t\tk2 = -1.1513021;\n\t\tk3 = -0.50559606;\n\t\tk4 = +0.00692167;\n\t\twl = -0.0041960863;\n\t\twm = -0.7034186147;\n\t\tws = +1.707614701;\n\t}\n\n\t// Approximate max saturation using a polynomial:\n\tlet S = k0 + k1 * a + k2 * b + k3 * a * a + k4 * a * b;\n\n\t// Do one step Halley's method to get closer\n\t// this gives an error less than 10e6, except for some blue hues where the dS/dh is close to infinite\n\t// this should be sufficient for most applications, otherwise do two/three steps\n\n\tlet k_l = +0.3963377774 * a + 0.2158037573 * b;\n\tlet k_m = -0.1055613458 * a - 0.0638541728 * b;\n\tlet k_s = -0.0894841775 * a - 1.291485548 * b;\n\n\t{\n\t\tlet l_ = 1 + S * k_l;\n\t\tlet m_ = 1 + S * k_m;\n\t\tlet s_ = 1 + S * k_s;\n\n\t\tlet l = l_ * l_ * l_;\n\t\tlet m = m_ * m_ * m_;\n\t\tlet s = s_ * s_ * s_;\n\n\t\tlet l_dS = 3 * k_l * l_ * l_;\n\t\tlet m_dS = 3 * k_m * m_ * m_;\n\t\tlet s_dS = 3 * k_s * s_ * s_;\n\n\t\tlet l_dS2 = 6 * k_l * k_l * l_;\n\t\tlet m_dS2 = 6 * k_m * k_m * m_;\n\t\tlet s_dS2 = 6 * k_s * k_s * s_;\n\n\t\tlet f = wl * l + wm * m + ws * s;\n\t\tlet f1 = wl * l_dS + wm * m_dS + ws * s_dS;\n\t\tlet f2 = wl * l_dS2 + wm * m_dS2 + ws * s_dS2;\n\n\t\tS = S - (f * f1) / (f1 * f1 - 0.5 * f * f2);\n\t}\n\n\treturn S;\n}\n\nexport function find_cusp(a, b) {\n\t// First, find the maximum saturation (saturation S = C/L)\n\tlet S_cusp = compute_max_saturation(a, b);\n\n\t// Convert to linear sRGB to find the first point where at least one of r,g or b >= 1:\n\tlet rgb = convertOklabToLrgb({ l: 1, a: S_cusp * a, b: S_cusp * b });\n\tlet L_cusp = Math.cbrt(1 / Math.max(rgb.r, rgb.g, rgb.b));\n\tlet C_cusp = L_cusp * S_cusp;\n\n\treturn [L_cusp, C_cusp];\n}\n\n// Finds intersection of the line defined by\n// L = L0 * (1 - t) + t * L1;\n// C = t * C1;\n// a and b must be normalized so a^2 + b^2 == 1\nfunction find_gamut_intersection(a, b, L1, C1, L0, cusp = null) {\n\tif (!cusp) {\n\t\t// Find the cusp of the gamut triangle\n\t\tcusp = find_cusp(a, b);\n\t}\n\n\t// Find the intersection for upper and lower half seprately\n\tlet t;\n\tif ((L1 - L0) * cusp[1] - (cusp[0] - L0) * C1 <= 0) {\n\t\t// Lower half\n\n\t\tt = (cusp[1] * L0) / (C1 * cusp[0] + cusp[1] * (L0 - L1));\n\t} else {\n\t\t// Upper half\n\n\t\t// First intersect with triangle\n\t\tt = (cusp[1] * (L0 - 1)) / (C1 * (cusp[0] - 1) + cusp[1] * (L0 - L1));\n\n\t\t// Then one step Halley's method\n\t\t{\n\t\t\tlet dL = L1 - L0;\n\t\t\tlet dC = C1;\n\n\t\t\tlet k_l = +0.3963377774 * a + 0.2158037573 * b;\n\t\t\tlet k_m = -0.1055613458 * a - 0.0638541728 * b;\n\t\t\tlet k_s = -0.0894841775 * a - 1.291485548 * b;\n\n\t\t\tlet l_dt = dL + dC * k_l;\n\t\t\tlet m_dt = dL + dC * k_m;\n\t\t\tlet s_dt = dL + dC * k_s;\n\n\t\t\t// If higher accuracy is required, 2 or 3 iterations of the following block can be used:\n\t\t\t{\n\t\t\t\tlet L = L0 * (1 - t) + t * L1;\n\t\t\t\tlet C = t * C1;\n\n\t\t\t\tlet l_ = L + C * k_l;\n\t\t\t\tlet m_ = L + C * k_m;\n\t\t\t\tlet s_ = L + C * k_s;\n\n\t\t\t\tlet l = l_ * l_ * l_;\n\t\t\t\tlet m = m_ * m_ * m_;\n\t\t\t\tlet s = s_ * s_ * s_;\n\n\t\t\t\tlet ldt = 3 * l_dt * l_ * l_;\n\t\t\t\tlet mdt = 3 * m_dt * m_ * m_;\n\t\t\t\tlet sdt = 3 * s_dt * s_ * s_;\n\n\t\t\t\tlet ldt2 = 6 * l_dt * l_dt * l_;\n\t\t\t\tlet mdt2 = 6 * m_dt * m_dt * m_;\n\t\t\t\tlet sdt2 = 6 * s_dt * s_dt * s_;\n\n\t\t\t\tlet r =\n\t\t\t\t\t4.0767416621 * l - 3.3077115913 * m + 0.2309699292 * s - 1;\n\t\t\t\tlet r1 =\n\t\t\t\t\t4.0767416621 * ldt -\n\t\t\t\t\t3.3077115913 * mdt +\n\t\t\t\t\t0.2309699292 * sdt;\n\t\t\t\tlet r2 =\n\t\t\t\t\t4.0767416621 * ldt2 -\n\t\t\t\t\t3.3077115913 * mdt2 +\n\t\t\t\t\t0.2309699292 * sdt2;\n\n\t\t\t\tlet u_r = r1 / (r1 * r1 - 0.5 * r * r2);\n\t\t\t\tlet t_r = -r * u_r;\n\n\t\t\t\tlet g =\n\t\t\t\t\t-1.2684380046 * l + 2.6097574011 * m - 0.3413193965 * s - 1;\n\t\t\t\tlet g1 =\n\t\t\t\t\t-1.2684380046 * ldt +\n\t\t\t\t\t2.6097574011 * mdt -\n\t\t\t\t\t0.3413193965 * sdt;\n\t\t\t\tlet g2 =\n\t\t\t\t\t-1.2684380046 * ldt2 +\n\t\t\t\t\t2.6097574011 * mdt2 -\n\t\t\t\t\t0.3413193965 * sdt2;\n\n\t\t\t\tlet u_g = g1 / (g1 * g1 - 0.5 * g * g2);\n\t\t\t\tlet t_g = -g * u_g;\n\n\t\t\t\tlet b =\n\t\t\t\t\t-0.0041960863 * l - 0.7034186147 * m + 1.707614701 * s - 1;\n\t\t\t\tlet b1 =\n\t\t\t\t\t-0.0041960863 * ldt -\n\t\t\t\t\t0.7034186147 * mdt +\n\t\t\t\t\t1.707614701 * sdt;\n\t\t\t\tlet b2 =\n\t\t\t\t\t-0.0041960863 * ldt2 -\n\t\t\t\t\t0.7034186147 * mdt2 +\n\t\t\t\t\t1.707614701 * sdt2;\n\n\t\t\t\tlet u_b = b1 / (b1 * b1 - 0.5 * b * b2);\n\t\t\t\tlet t_b = -b * u_b;\n\n\t\t\t\tt_r = u_r >= 0 ? t_r : 10e5;\n\t\t\t\tt_g = u_g >= 0 ? t_g : 10e5;\n\t\t\t\tt_b = u_b >= 0 ? t_b : 10e5;\n\n\t\t\t\tt += Math.min(t_r, Math.min(t_g, t_b));\n\t\t\t}\n\t\t}\n\t}\n\n\treturn t;\n}\n\nexport function get_ST_max(a_, b_, cusp = null) {\n\tif (!cusp) {\n\t\tcusp = find_cusp(a_, b_);\n\t}\n\tlet L = cusp[0];\n\tlet C = cusp[1];\n\treturn [C / L, C / (1 - L)];\n}\n\nexport function get_ST_mid(a_, b_) {\n\tlet S =\n\t\t0.11516993 +\n\t\t1 /\n\t\t\t(+7.4477897 +\n\t\t\t\t4.1590124 * b_ +\n\t\t\t\ta_ *\n\t\t\t\t\t(-2.19557347 +\n\t\t\t\t\t\t1.75198401 * b_ +\n\t\t\t\t\t\ta_ *\n\t\t\t\t\t\t\t(-2.13704948 -\n\t\t\t\t\t\t\t\t10.02301043 * b_ +\n\t\t\t\t\t\t\t\ta_ *\n\t\t\t\t\t\t\t\t\t(-4.24894561 +\n\t\t\t\t\t\t\t\t\t\t5.38770819 * b_ +\n\t\t\t\t\t\t\t\t\t\t4.69891013 * a_))));\n\n\tlet T =\n\t\t0.11239642 +\n\t\t1 /\n\t\t\t(+1.6132032 -\n\t\t\t\t0.68124379 * b_ +\n\t\t\t\ta_ *\n\t\t\t\t\t(+0.40370612 +\n\t\t\t\t\t\t0.90148123 * b_ +\n\t\t\t\t\t\ta_ *\n\t\t\t\t\t\t\t(-0.27087943 +\n\t\t\t\t\t\t\t\t0.6122399 * b_ +\n\t\t\t\t\t\t\t\ta_ *\n\t\t\t\t\t\t\t\t\t(+0.00299215 -\n\t\t\t\t\t\t\t\t\t\t0.45399568 * b_ -\n\t\t\t\t\t\t\t\t\t\t0.14661872 * a_))));\n\n\treturn [S, T];\n}\n\nexport function get_Cs(L, a_, b_) {\n\tlet cusp = find_cusp(a_, b_);\n\n\tlet C_max = find_gamut_intersection(a_, b_, L, 1, L, cusp);\n\tlet ST_max = get_ST_max(a_, b_, cusp);\n\n\tlet S_mid =\n\t\t0.11516993 +\n\t\t1 /\n\t\t\t(+7.4477897 +\n\t\t\t\t4.1590124 * b_ +\n\t\t\t\ta_ *\n\t\t\t\t\t(-2.19557347 +\n\t\t\t\t\t\t1.75198401 * b_ +\n\t\t\t\t\t\ta_ *\n\t\t\t\t\t\t\t(-2.13704948 -\n\t\t\t\t\t\t\t\t10.02301043 * b_ +\n\t\t\t\t\t\t\t\ta_ *\n\t\t\t\t\t\t\t\t\t(-4.24894561 +\n\t\t\t\t\t\t\t\t\t\t5.38770819 * b_ +\n\t\t\t\t\t\t\t\t\t\t4.69891013 * a_))));\n\n\tlet T_mid =\n\t\t0.11239642 +\n\t\t1 /\n\t\t\t(+1.6132032 -\n\t\t\t\t0.68124379 * b_ +\n\t\t\t\ta_ *\n\t\t\t\t\t(+0.40370612 +\n\t\t\t\t\t\t0.90148123 * b_ +\n\t\t\t\t\t\ta_ *\n\t\t\t\t\t\t\t(-0.27087943 +\n\t\t\t\t\t\t\t\t0.6122399 * b_ +\n\t\t\t\t\t\t\t\ta_ *\n\t\t\t\t\t\t\t\t\t(+0.00299215 -\n\t\t\t\t\t\t\t\t\t\t0.45399568 * b_ -\n\t\t\t\t\t\t\t\t\t\t0.14661872 * a_))));\n\n\tlet k = C_max / Math.min(L * ST_max[0], (1 - L) * ST_max[1]);\n\n\tlet C_a = L * S_mid;\n\tlet C_b = (1 - L) * T_mid;\n\tlet C_mid =\n\t\t0.9 *\n\t\tk *\n\t\tMath.sqrt(\n\t\t\tMath.sqrt(\n\t\t\t\t1 / (1 / (C_a * C_a * C_a * C_a) + 1 / (C_b * C_b * C_b * C_b))\n\t\t\t)\n\t\t);\n\n\tC_a = L * 0.4;\n\tC_b = (1 - L) * 0.8;\n\tlet C_0 = Math.sqrt(1 / (1 / (C_a * C_a) + 1 / (C_b * C_b)));\n\treturn [C_0, C_mid, C_max];\n}\n","import convertRgbToOklab from '../oklab/convertRgbToOklab.js';\nimport convertOklabToRgb from '../oklab/convertOklabToRgb.js';\nimport convertOklabToOkhsl from './convertOklabToOkhsl.js';\nimport convertOkhslToOklab from './convertOkhslToOklab.js';\n\nimport modeHsl from '../hsl/definition.js';\n\nconst modeOkhsl = {\n\t...modeHsl,\n\tmode: 'okhsl',\n\tchannels: ['h', 's', 'l', 'alpha'],\n\tparse: ['--okhsl'],\n\tserialize: '--okhsl',\n\tfromMode: {\n\t\toklab: convertOklabToOkhsl,\n\t\trgb: c => convertOklabToOkhsl(convertRgbToOklab(c))\n\t},\n\ttoMode: {\n\t\toklab: convertOkhslToOklab,\n\t\trgb: c => convertOklabToRgb(convertOkhslToOklab(c))\n\t}\n};\n\nexport default modeOkhsl;\n","/*\n\tCopyright (c) 2021 Björn Ottosson\n\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of\n\tthis software and associated documentation files (the \"Software\"), to deal in\n\tthe Software without restriction, including without limitation the rights to\n\tuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n\tof the Software, and to permit persons to whom the Software is furnished to do\n\tso, subject to the following conditions:\n\n\tThe above copyright notice and this permission notice shall be included in all\n\tcopies or substantial portions of the Software.\n\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\tSOFTWARE.\n */\n\nimport convertOklabToLrgb from '../oklab/convertOklabToLrgb.js';\nimport { get_ST_max, toe_inv } from '../okhsl/helpers.js';\n\nexport default function convertOkhsvToOklab(hsv) {\n\tconst ret = { mode: 'oklab' };\n\tif (hsv.alpha !== undefined) {\n\t\tret.alpha = hsv.alpha;\n\t}\n\n\t// Hue may be missing for achromatic colors\n\tconst h = hsv.h || 0;\n\n\tconst a_ = Math.cos((h / 180) * Math.PI);\n\tconst b_ = Math.sin((h / 180) * Math.PI);\n\n\tconst [S_max, T] = get_ST_max(a_, b_);\n\tconst S_0 = 0.5;\n\tconst k = 1 - S_0 / S_max;\n\tconst L_v = 1 - (hsv.s * S_0) / (S_0 + T - T * k * hsv.s);\n\tconst C_v = (hsv.s * T * S_0) / (S_0 + T - T * k * hsv.s);\n\n\tconst L_vt = toe_inv(L_v);\n\tconst C_vt = (C_v * L_vt) / L_v;\n\tconst rgb_scale = convertOklabToLrgb({\n\t\tl: L_vt,\n\t\ta: a_ * C_vt,\n\t\tb: b_ * C_vt\n\t});\n\tconst scale_L = Math.cbrt(\n\t\t1 / Math.max(rgb_scale.r, rgb_scale.g, rgb_scale.b, 0)\n\t);\n\n\tconst L_new = toe_inv(hsv.v * L_v);\n\tconst C = (C_v * L_new) / L_v;\n\n\tret.l = L_new * scale_L;\n\tret.a = C * a_ * scale_L;\n\tret.b = C * b_ * scale_L;\n\n\treturn ret;\n}\n","/*\n\tAdapted from code by Björn Ottosson,\n\treleased under the MIT license:\n\n\tCopyright (c) 2021 Björn Ottosson\n\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of\n\tthis software and associated documentation files (the \"Software\"), to deal in\n\tthe Software without restriction, including without limitation the rights to\n\tuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n\tof the Software, and to permit persons to whom the Software is furnished to do\n\tso, subject to the following conditions:\n\n\tThe above copyright notice and this permission notice shall be included in all\n\tcopies or substantial portions of the Software.\n\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\tSOFTWARE.\n */\n\nimport normalizeHue from '../util/normalizeHue.js';\nimport convertOklabToLrgb from '../oklab/convertOklabToLrgb.js';\nimport { get_ST_max, toe_inv, toe } from '../okhsl/helpers.js';\n\nexport default function convertOklabToOkhsv(lab) {\n\tlet c = Math.sqrt(lab.a * lab.a + lab.b * lab.b);\n\n\tlet l = lab.l;\n\t// TODO: c = 0\n\tlet a_ = c ? lab.a / c : 1;\n\tlet b_ = c ? lab.b / c : 1;\n\n\tlet [S_max, T] = get_ST_max(a_, b_);\n\tlet S_0 = 0.5;\n\tlet k = 1 - S_0 / S_max;\n\n\tlet t = T / (c + l * T);\n\tlet L_v = t * l;\n\tlet C_v = t * c;\n\n\tlet L_vt = toe_inv(L_v);\n\tlet C_vt = (C_v * L_vt) / L_v;\n\n\tlet rgb_scale = convertOklabToLrgb({ l: L_vt, a: a_ * C_vt, b: b_ * C_vt });\n\tlet scale_L = Math.cbrt(\n\t\t1 / Math.max(rgb_scale.r, rgb_scale.g, rgb_scale.b, 0)\n\t);\n\n\tl = l / scale_L;\n\tc = ((c / scale_L) * toe(l)) / l;\n\tl = toe(l);\n\n\tconst ret = {\n\t\tmode: 'okhsv',\n\t\ts: c ? ((S_0 + T) * C_v) / (T * S_0 + T * k * C_v) : 0,\n\t\tv: l ? l / L_v : 0\n\t};\n\tif (ret.s) {\n\t\tret.h = normalizeHue((Math.atan2(lab.b, lab.a) * 180) / Math.PI);\n\t}\n\tif (lab.alpha !== undefined) {\n\t\tret.alpha = lab.alpha;\n\t}\n\treturn ret;\n}\n","import convertRgbToOklab from '../oklab/convertRgbToOklab.js';\nimport convertOklabToRgb from '../oklab/convertOklabToRgb.js';\nimport convertOklabToOkhsv from './convertOklabToOkhsv.js';\nimport convertOkhsvToOklab from './convertOkhsvToOklab.js';\n\nimport modeHsv from '../hsv/definition.js';\n\nconst modeOkhsv = {\n\t...modeHsv,\n\tmode: 'okhsv',\n\tchannels: ['h', 's', 'v', 'alpha'],\n\tparse: ['--okhsv'],\n\tserialize: '--okhsv',\n\tfromMode: {\n\t\toklab: convertOklabToOkhsv,\n\t\trgb: c => convertOklabToOkhsv(convertRgbToOklab(c))\n\t},\n\ttoMode: {\n\t\toklab: convertOkhsvToOklab,\n\t\trgb: c => convertOklabToRgb(convertOkhsvToOklab(c))\n\t}\n};\n\nexport default modeOkhsv;\n","const convertLrgbToOklab = ({ r, g, b, alpha }) => {\n\tlet L = Math.cbrt(0.4122214708 * r + 0.5363325363 * g + 0.0514459929 * b);\n\tlet M = Math.cbrt(0.2119034982 * r + 0.6806995451 * g + 0.1073969566 * b);\n\tlet S = Math.cbrt(0.0883024619 * r + 0.2817188376 * g + 0.6299787005 * b);\n\n\tlet res = {\n\t\tmode: 'oklab',\n\t\tl: 0.2104542553 * L + 0.793617785 * M - 0.0040720468 * S,\n\t\ta: 1.9779984951 * L - 2.428592205 * M + 0.4505937099 * S,\n\t\tb: 0.0259040371 * L + 0.7827717662 * M - 0.808675766 * S\n\t};\n\n\tif (alpha !== undefined) {\n\t\tres.alpha = alpha;\n\t}\n\n\treturn res;\n};\n\nexport default convertLrgbToOklab;\n","const convertOklabToLrgb = ({ l, a, b, alpha }) => {\n\tlet L = Math.pow(l + 0.3963377774 * a + 0.2158037573 * b, 3);\n\tlet M = Math.pow(l - 0.1055613458 * a - 0.0638541728 * b, 3);\n\tlet S = Math.pow(l - 0.0894841775 * a - 1.291485548 * b, 3);\n\n\tlet res = {\n\t\tmode: 'lrgb',\n\t\tr: +4.0767416621 * L - 3.3077115913 * M + 0.2309699292 * S,\n\t\tg: -1.2684380046 * L + 2.6097574011 * M - 0.3413193965 * S,\n\t\tb: -0.0041960863 * L - 0.7034186147 * M + 1.707614701 * S\n\t};\n\n\tif (alpha !== undefined) {\n\t\tres.alpha = alpha;\n\t}\n\n\treturn res;\n};\n\nexport default convertOklabToLrgb;\n","import convertLrgbToRgb from '../lrgb/convertLrgbToRgb.js';\nimport convertOklabToLrgb from './convertOklabToLrgb.js';\n\nconst convertOklabToRgb = c => convertLrgbToRgb(convertOklabToLrgb(c));\n\nexport default convertOklabToRgb;\n","import convertRgbToLrgb from '../lrgb/convertRgbToLrgb.js';\nimport convertLrgbToOklab from './convertLrgbToOklab.js';\n\nconst convertRgbToOklab = rgb => {\n\tlet res = convertLrgbToOklab(convertRgbToLrgb(rgb));\n\tif (rgb.r === rgb.b && rgb.b === rgb.g) {\n\t\tres.a = res.b = 0;\n\t}\n\treturn res;\n};\n\nexport default convertRgbToOklab;\n","import convertOklabToLrgb from './convertOklabToLrgb.js';\nimport convertLrgbToOklab from './convertLrgbToOklab.js';\nimport convertRgbToOklab from './convertRgbToOklab.js';\nimport convertOklabToRgb from './convertOklabToRgb.js';\n\nimport lab from '../lab/definition.js';\n\n/*\n\tOklab, a perceptual color space for image processing by Björn Ottosson\n\tReference: https://bottosson.github.io/posts/oklab/\n */\n\nconst definition = {\n\t...lab,\n\tmode: 'oklab',\n\n\ttoMode: {\n\t\tlrgb: convertOklabToLrgb,\n\t\trgb: convertOklabToRgb\n\t},\n\n\tfromMode: {\n\t\tlrgb: convertLrgbToOklab,\n\t\trgb: convertRgbToOklab\n\t},\n\n\tranges: {\n\t\tl: [0, 0.999],\n\t\ta: [-0.233, 0.276],\n\t\tb: [-0.311, 0.198]\n\t},\n\n\tparse: ['--oklab'],\n\tserialize: '--oklab'\n};\n\nexport default definition;\n","import lch from '../lch/definition.js';\nimport convertLabToLch from '../lch/convertLabToLch.js';\nimport convertLchToLab from '../lch/convertLchToLab.js';\nimport convertOklabToRgb from '../oklab/convertOklabToRgb.js';\nimport convertRgbToOklab from '../oklab/convertRgbToOklab.js';\n\nconst definition = {\n\t...lch,\n\tmode: 'oklch',\n\n\ttoMode: {\n\t\toklab: c => convertLchToLab(c, 'oklab'),\n\t\trgb: c => convertOklabToRgb(convertLchToLab(c, 'oklab'))\n\t},\n\n\tfromMode: {\n\t\trgb: c => convertLabToLch(convertRgbToOklab(c), 'oklch'),\n\t\toklab: c => convertLabToLch(c, 'oklch')\n\t},\n\n\tparse: ['--oklch'],\n\tserialize: '--oklch',\n\n\tranges: {\n\t\tl: [0, 0.999],\n\t\tc: [0, 0.322],\n\t\th: [0, 360]\n\t}\n};\n\nexport default definition;\n","/*\n\tConvert Display P3 values to CIE XYZ D65\n\n\tReferences:\n\t\t* https://drafts.csswg.org/css-color/#color-conversion-code\n\t\t* http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n*/\n\nimport convertRgbToLrgb from '../lrgb/convertRgbToLrgb.js';\n\nconst convertP3ToXyz65 = rgb => {\n\tlet { r, g, b, alpha } = convertRgbToLrgb(rgb);\n\tlet res = {\n\t\tmode: 'xyz65',\n\t\tx: 0.4865709 * r + 0.2656676 * g + 0.1982172 * b,\n\t\ty: 0.2289745 * r + 0.6917385 * g + 0.0792869 * b,\n\t\tz: 0.0 * r + 0.0451133 * g + 1.0439443 * b\n\t};\n\tif (alpha !== undefined) {\n\t\tres.alpha = alpha;\n\t}\n\treturn res;\n};\n\nexport default convertP3ToXyz65;\n","/*\n\tCIE XYZ D65 values to Display P3.\n\n\tReferences:\n\t\t* https://drafts.csswg.org/css-color/#color-conversion-code\n\t\t* http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n*/\n\nimport convertLrgbToRgb from '../lrgb/convertLrgbToRgb.js';\n\nconst convertXyz65ToP3 = ({ x, y, z, alpha }) => {\n\tlet res = convertLrgbToRgb(\n\t\t{\n\t\t\tr: x * 2.4934969 - y * 0.9313836 - 0.4027107 * z,\n\t\t\tg: x * -0.8294889 + y * 1.762664 + 0.0236246 * z,\n\t\t\tb: x * 0.0358458 - y * 0.0761723 + 0.9568845 * z\n\t\t},\n\t\t'p3'\n\t);\n\tif (alpha !== undefined) {\n\t\tres.alpha = alpha;\n\t}\n\treturn res;\n};\n\nexport default convertXyz65ToP3;\n","import rgb from '../rgb/definition.js';\nimport convertP3ToXyz65 from './convertP3ToXyz65.js';\nimport convertXyz65ToP3 from './convertXyz65ToP3.js';\nimport convertRgbToXyz65 from '../xyz65/convertRgbToXyz65.js';\nimport convertXyz65ToRgb from '../xyz65/convertXyz65ToRgb.js';\n\nconst definition = {\n\t...rgb,\n\tmode: 'p3',\n\tparse: ['display-p3'],\n\tserialize: 'display-p3',\n\n\tfromMode: {\n\t\trgb: color => convertXyz65ToP3(convertRgbToXyz65(color)),\n\t\txyz65: convertXyz65ToP3\n\t},\n\n\ttoMode: {\n\t\trgb: color => convertXyz65ToRgb(convertP3ToXyz65(color)),\n\t\txyz65: convertP3ToXyz65\n\t}\n};\n\nexport default definition;\n","import { parsers, colorProfiles, getMode } from './modes.js';\nimport { rx_num_per_none } from './util/regex.js';\n\nfunction parseColorSyntax(color) {\n\tconst m = color.match(/^color\\(\\s*([a-z0-9-]+)\\s*(.*?)\\s*\\)$/);\n\tif (!m) {\n\t\treturn undefined;\n\t}\n\tconst mode = colorProfiles[m[1]];\n\tif (!mode) {\n\t\treturn undefined;\n\t}\n\tconst res = { mode };\n\tconst [cmp_string, alpha] = m[2].split(/\\s*\\/\\s*/);\n\tlet cm;\n\tif (alpha !== undefined) {\n\t\tcm = alpha.match(rx_num_per_none);\n\t\tif (!cm) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (cm[1] !== undefined) {\n\t\t\tres.alpha = cm[1] / 100;\n\t\t} else if (cm[2] !== undefined) {\n\t\t\tres.alpha = +cm[2];\n\t\t}\n\t}\n\tconst components = cmp_string.split(/\\s+/);\n\tlet channels = getMode(mode).channels;\n\tfor (let i = 0, ch; i < channels.length; i++) {\n\t\tch = channels[i];\n\t\tif (ch === 'alpha') {\n\t\t\tcontinue;\n\t\t}\n\t\tif (i >= components.length || !components[i]) {\n\t\t\tres[ch] = 0;\n\t\t\tcontinue;\n\t\t}\n\t\tif (!(cm = components[i].match(rx_num_per_none))) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (cm[1] !== undefined) {\n\t\t\tres[ch] = cm[1] / 100;\n\t\t} else if (cm[2] !== undefined) {\n\t\t\tres[ch] = +cm[2];\n\t\t}\n\t}\n\treturn res;\n}\n\nconst parse = color => {\n\tif (typeof color !== 'string') {\n\t\treturn undefined;\n\t}\n\tlet result = undefined;\n\tlet i = 0;\n\tlet len = parsers.length;\n\twhile (i < len) {\n\t\tif ((result = parsers[i++](color)) !== undefined) {\n\t\t\treturn result;\n\t\t}\n\t}\n\treturn parseColorSyntax(color);\n};\n\nexport default parse;\n","/*\n\tConvert ProPhoto RGB values to CIE XYZ D50\n\n\tReferences:\n\t\t* https://drafts.csswg.org/css-color/#color-conversion-code\n\t\t* http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n*/\n\nconst linearize = v => {\n\tlet abs = Math.abs(v);\n\tif (abs >= 16 / 512) {\n\t\treturn Math.sign(v) * Math.pow(abs, 1.8);\n\t}\n\treturn v / 16;\n};\n\nconst convertProphotoToXyz50 = prophoto => {\n\tlet r = linearize(prophoto.r);\n\tlet g = linearize(prophoto.g);\n\tlet b = linearize(prophoto.b);\n\tlet res = {\n\t\tmode: 'xyz50',\n\t\tx:\n\t\t\t0.7977604896723027 * r +\n\t\t\t0.13518583717574031 * g +\n\t\t\t0.0313493495815248 * b,\n\t\ty:\n\t\t\t0.2880711282292934 * r +\n\t\t\t0.7118432178101014 * g +\n\t\t\t0.00008565396060525902 * b,\n\t\tz: 0.0 * r + 0.0 * g + 0.8251046025104601 * b\n\t};\n\tif (prophoto.alpha !== undefined) {\n\t\tres.alpha = prophoto.alpha;\n\t}\n\treturn res;\n};\n\nexport default convertProphotoToXyz50;\n","/*\n\tConvert CIE XYZ D50 values to ProPhoto RGB\n\n\tReferences:\n\t\t* https://drafts.csswg.org/css-color/#color-conversion-code\n\t\t* http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n*/\n\nconst gamma = v => {\n\tlet abs = Math.abs(v);\n\tif (abs >= 1 / 512) {\n\t\treturn Math.sign(v) * Math.pow(abs, 1 / 1.8);\n\t}\n\treturn 16 * v;\n};\n\nconst convertXyz50ToProphoto = ({ x, y, z, alpha }) => {\n\tlet res = {\n\t\tmode: 'prophoto',\n\t\tr: gamma(\n\t\t\tx * 1.3457989731028281 -\n\t\t\t\ty * 0.25558010007997534 -\n\t\t\t\t0.05110628506753401 * z\n\t\t),\n\t\tg: gamma(\n\t\t\tx * -0.5446224939028347 +\n\t\t\t\ty * 1.5082327413132781 +\n\t\t\t\t0.02053603239147973 * z\n\t\t),\n\t\tb: gamma(x * 0.0 + y * 0.0 + 1.2119675456389454 * z)\n\t};\n\tif (alpha !== undefined) {\n\t\tres.alpha = alpha;\n\t}\n\treturn res;\n};\n\nexport default convertXyz50ToProphoto;\n","import rgb from '../rgb/definition.js';\n\nimport convertXyz50ToProphoto from './convertXyz50ToProphoto.js';\nimport convertProphotoToXyz50 from './convertProphotoToXyz50.js';\n\nimport convertXyz50ToRgb from '../xyz50/convertXyz50ToRgb.js';\nimport convertRgbToXyz50 from '../xyz50/convertRgbToXyz50.js';\n\n/*\n\tProPhoto RGB Color space\n\n\tReferences:\n\t\t* https://en.wikipedia.org/wiki/ProPhoto_RGB_color_space\n */\n\nconst definition = {\n\t...rgb,\n\tmode: 'prophoto',\n\tparse: ['prophoto-rgb'],\n\tserialize: 'prophoto-rgb',\n\n\tfromMode: {\n\t\txyz50: convertXyz50ToProphoto,\n\t\trgb: color => convertXyz50ToProphoto(convertRgbToXyz50(color))\n\t},\n\n\ttoMode: {\n\t\txyz50: convertProphotoToXyz50,\n\t\trgb: color => convertXyz50ToRgb(convertProphotoToXyz50(color))\n\t}\n};\n\nexport default definition;\n","/*\n\tConvert Rec. 2020 values to CIE XYZ D65\n\n\tReferences:\n\t\t* https://drafts.csswg.org/css-color/#color-conversion-code\n\t\t* http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\t\t* https://www.itu.int/rec/R-REC-BT.2020/en\n*/\n\nconst α = 1.09929682680944;\nconst β = 0.018053968510807;\n\nconst linearize = v => {\n\tlet abs = Math.abs(v);\n\tif (abs < β * 4.5) {\n\t\treturn v / 4.5;\n\t}\n\treturn (Math.sign(v) || 1) * Math.pow((abs + α - 1) / α, 1 / 0.45);\n};\n\nconst convertRec2020ToXyz65 = rec2020 => {\n\tlet r = linearize(rec2020.r);\n\tlet g = linearize(rec2020.g);\n\tlet b = linearize(rec2020.b);\n\tlet res = {\n\t\tmode: 'xyz65',\n\t\tx:\n\t\t\t0.6369580483012914 * r +\n\t\t\t0.14461690358620832 * g +\n\t\t\t0.1688809751641721 * b,\n\t\ty:\n\t\t\t0.2627002120112671 * r +\n\t\t\t0.6779980715188708 * g +\n\t\t\t0.05930171646986196 * b,\n\t\tz: 0 * r + 0.028072693049087428 * g + 1.060985057710791 * b\n\t};\n\tif (rec2020.alpha !== undefined) {\n\t\tres.alpha = rec2020.alpha;\n\t}\n\treturn res;\n};\n\nexport default convertRec2020ToXyz65;\n","/*\n\tConvert CIE XYZ D65 values to Rec. 2020\n\n\tReferences:\n\t\t* https://drafts.csswg.org/css-color/#color-conversion-code\n\t\t* http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\t\t* https://www.itu.int/rec/R-REC-BT.2020/en\n*/\n\nconst α = 1.09929682680944;\nconst β = 0.018053968510807;\nconst gamma = v => {\n\tconst abs = Math.abs(v);\n\tif (abs > β) {\n\t\treturn (Math.sign(v) || 1) * (α * Math.pow(abs, 0.45) - (α - 1));\n\t}\n\treturn 4.5 * v;\n};\n\nconst convertXyz65ToRec2020 = ({ x, y, z, alpha }) => {\n\tlet res = {\n\t\tmode: 'rec2020',\n\t\tr: gamma(\n\t\t\tx * 1.7166511879712674 -\n\t\t\t\ty * 0.35567078377639233 -\n\t\t\t\t0.25336628137365974 * z\n\t\t),\n\t\tg: gamma(\n\t\t\tx * -0.6666843518324892 +\n\t\t\t\ty * 1.6164812366349395 +\n\t\t\t\t0.01576854581391113 * z\n\t\t),\n\t\tb: gamma(\n\t\t\tx * 0.017639857445310783 -\n\t\t\t\ty * 0.042770613257808524 +\n\t\t\t\t0.9421031212354738 * z\n\t\t)\n\t};\n\tif (alpha !== undefined) {\n\t\tres.alpha = alpha;\n\t}\n\treturn res;\n};\n\nexport default convertXyz65ToRec2020;\n","import rgb from '../rgb/definition.js';\n\nimport convertXyz65ToRec2020 from './convertXyz65ToRec2020.js';\nimport convertRec2020ToXyz65 from './convertRec2020ToXyz65.js';\n\nimport convertRgbToXyz65 from '../xyz65/convertRgbToXyz65.js';\nimport convertXyz65ToRgb from '../xyz65/convertXyz65ToRgb.js';\n\nconst definition = {\n\t...rgb,\n\tmode: 'rec2020',\n\n\tfromMode: {\n\t\txyz65: convertXyz65ToRec2020,\n\t\trgb: color => convertXyz65ToRec2020(convertRgbToXyz65(color))\n\t},\n\n\ttoMode: {\n\t\txyz65: convertRec2020ToXyz65,\n\t\trgb: color => convertXyz65ToRgb(convertRec2020ToXyz65(color))\n\t},\n\n\tparse: ['rec2020'],\n\tserialize: 'rec2020'\n};\n\nexport default definition;\n","import parseNamed from './parseNamed.js';\nimport parseHex from './parseHex.js';\nimport parseRgb from './parseRgb.js';\nimport parseTransparent from './parseTransparent.js';\nimport { interpolatorLinear } from '../interpolate/linear.js';\nimport { fixupAlpha } from '../fixup/alpha.js';\n\n/*\n\tsRGB color space\n */\n\nconst definition = {\n\tmode: 'rgb',\n\tchannels: ['r', 'g', 'b', 'alpha'],\n\tparse: [parseHex, parseRgb, parseNamed, parseTransparent, 'srgb'],\n\tserialize: 'srgb',\n\n\tinterpolate: {\n\t\tr: interpolatorLinear,\n\t\tg: interpolatorLinear,\n\t\tb: interpolatorLinear,\n\t\talpha: { use: interpolatorLinear, fixup: fixupAlpha }\n\t}\n};\n\nexport default definition;\n","import parseNumber from './parseNumber.js';\n\nconst hex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n\nconst parseHex = color => {\n\tlet match;\n\t// eslint-disable-next-line no-cond-assign\n\treturn (match = color.match(hex))\n\t\t? parseNumber(parseInt(match[1], 16), match[1].length)\n\t\t: undefined;\n};\n\nexport default parseHex;\n","import parseNumber from './parseNumber.js';\nimport named from '../colors/named.js';\n\n// Also supports the `transparent` color as defined in:\n// https://drafts.csswg.org/css-color/#transparent-black\nconst parseNamed = color => {\n\treturn parseNumber(named[color.toLowerCase()], 6);\n};\n\nexport default parseNamed;\n","const parseNumber = (color, len) => {\n\tif (typeof color !== 'number') return;\n\n\t// hex3: #c93 -> #cc9933\n\tif (len === 3) {\n\t\treturn {\n\t\t\tmode: 'rgb',\n\t\t\tr: (((color >> 8) & 0xf) | ((color >> 4) & 0xf0)) / 255,\n\t\t\tg: (((color >> 4) & 0xf) | (color & 0xf0)) / 255,\n\t\t\tb: ((color & 0xf) | ((color << 4) & 0xf0)) / 255\n\t\t};\n\t}\n\n\t// hex4: #c931 -> #cc993311\n\tif (len === 4) {\n\t\treturn {\n\t\t\tmode: 'rgb',\n\t\t\tr: (((color >> 12) & 0xf) | ((color >> 8) & 0xf0)) / 255,\n\t\t\tg: (((color >> 8) & 0xf) | ((color >> 4) & 0xf0)) / 255,\n\t\t\tb: (((color >> 4) & 0xf) | (color & 0xf0)) / 255,\n\t\t\talpha: ((color & 0xf) | ((color << 4) & 0xf0)) / 255\n\t\t};\n\t}\n\n\t// hex6: #f0f1f2\n\tif (len === 6) {\n\t\treturn {\n\t\t\tmode: 'rgb',\n\t\t\tr: ((color >> 16) & 0xff) / 255,\n\t\t\tg: ((color >> 8) & 0xff) / 255,\n\t\t\tb: (color & 0xff) / 255\n\t\t};\n\t}\n\n\t// hex8: #f0f1f2ff\n\tif (len === 8) {\n\t\treturn {\n\t\t\tmode: 'rgb',\n\t\t\tr: ((color >> 24) & 0xff) / 255,\n\t\t\tg: ((color >> 16) & 0xff) / 255,\n\t\t\tb: ((color >> 8) & 0xff) / 255,\n\t\t\talpha: (color & 0xff) / 255\n\t\t};\n\t}\n};\n\nexport default parseNumber;\n","import {\n\tnum,\n\tper,\n\tnum_per,\n\tnum_none,\n\tper_none,\n\tnum_per_none,\n\tc,\n\ts\n} from '../util/regex.js';\n\n/*\n\trgb() regular expressions.\n\tReference: https://drafts.csswg.org/css-color/#rgb-functions\n */\nconst rgb_num_old = new RegExp(\n\t`^rgba?\\\\(\\\\s*${num}${c}${num}${c}${num}\\\\s*(?:,\\\\s*${num_per}\\\\s*)?\\\\)$`\n);\n\nconst rgb_per_old = new RegExp(\n\t`^rgba?\\\\(\\\\s*${per}${c}${per}${c}${per}\\\\s*(?:,\\\\s*${num_per}\\\\s*)?\\\\)$`\n);\n\nconst rgb_num_new = new RegExp(\n\t`^rgba?\\\\(\\\\s*${num_none}${s}${num_none}${s}${num_none}\\\\s*(?:\\\\/\\\\s*${num_per_none}\\\\s*)?\\\\)$`\n);\n\nconst rgb_per_new = new RegExp(\n\t`^rgba?\\\\(\\\\s*${per_none}${s}${per_none}${s}${per_none}\\\\s*(?:\\\\/\\\\s*${num_per_none}\\\\s*)?\\\\)$`\n);\n\nconst parseRgb = color => {\n\tlet res = { mode: 'rgb' };\n\tlet match;\n\tif ((match = color.match(rgb_num_old) || color.match(rgb_num_new))) {\n\t\tif (match[1] !== undefined) {\n\t\t\tres.r = match[1] / 255;\n\t\t}\n\t\tif (match[2] !== undefined) {\n\t\t\tres.g = match[2] / 255;\n\t\t}\n\t\tif (match[3] !== undefined) {\n\t\t\tres.b = match[3] / 255;\n\t\t}\n\t} else if ((match = color.match(rgb_per_old) || color.match(rgb_per_new))) {\n\t\tif (match[1] !== undefined) {\n\t\t\tres.r = match[1] / 100;\n\t\t}\n\t\tif (match[2] !== undefined) {\n\t\t\tres.g = match[2] / 100;\n\t\t}\n\t\tif (match[3] !== undefined) {\n\t\t\tres.b = match[3] / 100;\n\t\t}\n\t} else {\n\t\treturn undefined;\n\t}\n\n\tif (match[4] !== undefined) {\n\t\tres.alpha = match[4] / 100;\n\t} else if (match[5] !== undefined) {\n\t\tres.alpha = +match[5];\n\t}\n\n\treturn res;\n};\n\nexport default parseRgb;\n","const parseTransparent = c =>\n\tc === 'transparent'\n\t\t? { mode: 'rgb', r: 0, g: 0, b: 0, alpha: 0 }\n\t\t: undefined;\n\nexport default parseTransparent;\n","const hueToDeg = (val, unit) => {\n\tswitch (unit) {\n\t\tcase 'deg':\n\t\t\treturn +val;\n\t\tcase 'rad':\n\t\t\treturn (val / Math.PI) * 180;\n\t\tcase 'grad':\n\t\t\treturn (val / 10) * 9;\n\t\tcase 'turn':\n\t\t\treturn val * 360;\n\t}\n};\n\nexport default hueToDeg;\n","const normalizeHue = hue => ((hue = hue % 360) < 0 ? hue + 360 : hue);\n\nexport default normalizeHue;\n","/*\n\tBasic building blocks for color regexes\n\t---------------------------------------\n\n\tThese regexes are expressed as strings\n\tto be interpolated in the color regexes.\n */\n\n// <number>\nexport const num = '([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)';\n\n// <number> or 'none'\nexport const num_none = `(?:${num}|none)`;\n\n// <percentage>\nexport const per = `${num}%`;\n\n// <percent> or 'none'\nexport const per_none = `(?:${num}%|none)`;\n\n// <number-percentage> (<alpha-value>)\nexport const num_per = `(?:${num}%|${num})`;\n\n// <number-percentage> (<alpha-value>) or 'none'\nexport const num_per_none = `(?:${num}%|${num}|none)`;\n\n// <hue>\nexport const hue = `(?:${num}(deg|grad|rad|turn)|${num})`;\n\n// <hue> or 'none'\nexport const hue_none = `(?:${num}(deg|grad|rad|turn)|${num}|none)`;\n\nexport const c = `\\\\s*,\\\\s*`; // comma\nexport const so = '\\\\s*'; // space, optional\nexport const s = `\\\\s+`; // space\n\nexport const rx_num_per_none = new RegExp('^' + num_per_none + '$');\n","// D50 white\nexport const Xn = 0.96422;\nexport const Yn = 1.0;\nexport const Zn = 0.82521;\n\nexport const k = Math.pow(29, 3) / Math.pow(3, 3);\nexport const e = Math.pow(6, 3) / Math.pow(29, 3);\n","/*\n\tConvert sRGB values to CIE XYZ D50\n\n\tReferences:\n\t\t* https://drafts.csswg.org/css-color/#color-conversion-code\n\t\t* http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\t\n*/\n\nimport convertRgbToLrgb from '../lrgb/convertRgbToLrgb.js';\n\nconst convertRgbToXyz50 = rgb => {\n\tlet { r, g, b, alpha } = convertRgbToLrgb(rgb);\n\tlet res = {\n\t\tmode: 'xyz50',\n\t\tx: 0.4360747 * r + 0.3850649 * g + 0.1430804 * b,\n\t\ty: 0.2225045 * r + 0.7168786 * g + 0.0606169 * b,\n\t\tz: 0.0139322 * r + 0.0971045 * g + 0.7141733 * b\n\t};\n\tif (alpha !== undefined) {\n\t\tres.alpha = alpha;\n\t}\n\treturn res;\n};\n\nexport default convertRgbToXyz50;\n","/*\n\tCIE XYZ D50 values to sRGB.\n\n\tReferences:\n\t\t* https://drafts.csswg.org/css-color/#color-conversion-code\n\t\t* http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n*/\n\nimport convertLrgbToRgb from '../lrgb/convertLrgbToRgb.js';\n\nconst convertXyz50ToRgb = ({ x, y, z, alpha }) => {\n\tlet res = convertLrgbToRgb({\n\t\tr: x * 3.1338561 - y * 1.6168667 - 0.4906146 * z,\n\t\tg: x * -0.9787684 + y * 1.9161415 + 0.033454 * z,\n\t\tb: x * 0.0719453 - y * 0.2289914 + 1.4052427 * z\n\t});\n\tif (alpha !== undefined) {\n\t\tres.alpha = alpha;\n\t}\n\treturn res;\n};\n\nexport default convertXyz50ToRgb;\n","/*\n\tThe XYZ D50 color space\n\t-----------------------\n */\n\nimport convertXyz50ToRgb from './convertXyz50ToRgb.js';\nimport convertXyz50ToLab from '../lab/convertXyz50ToLab.js';\nimport convertRgbToXyz50 from './convertRgbToXyz50.js';\nimport convertLabToXyz50 from '../lab/convertLabToXyz50.js';\nimport { interpolatorLinear } from '../interpolate/linear.js';\nimport { fixupAlpha } from '../fixup/alpha.js';\n\nconst definition = {\n\tmode: 'xyz50',\n\tparse: ['xyz-d50', '--xyz-d50'],\n\tserialize: 'xyz-d50',\n\n\ttoMode: {\n\t\trgb: convertXyz50ToRgb,\n\t\tlab: convertXyz50ToLab\n\t},\n\n\tfromMode: {\n\t\trgb: convertRgbToXyz50,\n\t\tlab: convertLabToXyz50\n\t},\n\n\tchannels: ['x', 'y', 'z', 'alpha'],\n\n\tranges: {\n\t\tx: [0, 0.964],\n\t\ty: [0, 0.999],\n\t\tz: [0, 0.825]\n\t},\n\n\tinterpolate: {\n\t\tx: interpolatorLinear,\n\t\ty: interpolatorLinear,\n\t\tz: interpolatorLinear,\n\t\talpha: { use: interpolatorLinear, fixup: fixupAlpha }\n\t}\n};\n\nexport default definition;\n","// D65 white\nexport const Xn = 0.95047;\nexport const Yn = 1.0;\nexport const Zn = 1.08883;\n\nexport const k = Math.pow(29, 3) / Math.pow(3, 3);\nexport const e = Math.pow(6, 3) / Math.pow(29, 3);\n","/*\n\tConvert sRGB values to CIE XYZ D65\n\n\tReferences:\n\t\t* https://drafts.csswg.org/css-color/#color-conversion-code\n\t\t* http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n*/\n\nimport convertRgbToLrgb from '../lrgb/convertRgbToLrgb.js';\n\nconst convertRgbToXyz65 = rgb => {\n\tlet { r, g, b, alpha } = convertRgbToLrgb(rgb);\n\tlet res = {\n\t\tmode: 'xyz65',\n\t\tx: 0.4124564 * r + 0.3575761 * g + 0.1804375 * b,\n\t\ty: 0.2126729 * r + 0.7151522 * g + 0.072175 * b,\n\t\tz: 0.0193339 * r + 0.119192 * g + 0.9503041 * b\n\t};\n\tif (alpha !== undefined) {\n\t\tres.alpha = alpha;\n\t}\n\treturn res;\n};\n\nexport default convertRgbToXyz65;\n","/*\n\tChromatic adaptation of CIE XYZ from D50 to D65 white point\n\tusing the Bradford method.\n\n\tReferences:\n\t\t* https://drafts.csswg.org/css-color/#color-conversion-code\n\t\t* http://www.brucelindbloom.com/index.html?Eqn_ChromAdapt.html\t\n*/\n\nconst convertXyz50ToXyz65 = xyz50 => {\n\tlet { x, y, z, alpha } = xyz50;\n\tlet res = {\n\t\tmode: 'xyz65',\n\t\tx: 0.9555766 * x - 0.0230393 * y + 0.0631636 * z,\n\t\ty: -0.0282895 * x + 1.0099416 * y + 0.0210077 * z,\n\t\tz: 0.0122982 * x - 0.020483 * y + 1.3299098 * z\n\t};\n\tif (alpha !== undefined) {\n\t\tres.alpha = alpha;\n\t}\n\treturn res;\n};\n\nexport default convertXyz50ToXyz65;\n","/*\n\tCIE XYZ D65 values to sRGB.\n\n\tReferences:\n\t\t* https://drafts.csswg.org/css-color/#color-conversion-code\n\t\t* http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n*/\n\nimport convertLrgbToRgb from '../lrgb/convertLrgbToRgb.js';\n\nconst convertXyz65ToRgb = ({ x, y, z, alpha }) => {\n\tlet res = convertLrgbToRgb({\n\t\tr: x * 3.2404542 - y * 1.5371385 - 0.4985314 * z,\n\t\tg: x * -0.969266 + y * 1.8760108 + 0.041556 * z,\n\t\tb: x * 0.0556434 - y * 0.2040259 + 1.0572252 * z\n\t});\n\tif (alpha !== undefined) {\n\t\tres.alpha = alpha;\n\t}\n\treturn res;\n};\n\nexport default convertXyz65ToRgb;\n","/*\n\tChromatic adaptation of CIE XYZ from D65 to D50 white point\n\tusing the Bradford method.\n\n\tReferences:\n\t\t* https://drafts.csswg.org/css-color/#color-conversion-code\n\t\t* http://www.brucelindbloom.com/index.html?Eqn_ChromAdapt.html\t\n*/\n\nconst convertXyz65ToXyz50 = xyz65 => {\n\tlet { x, y, z, alpha } = xyz65;\n\tlet res = {\n\t\tmode: 'xyz50',\n\t\tx: 1.0478112 * x + 0.0228866 * y - 0.050127 * z,\n\t\ty: 0.0295424 * x + 0.9904844 * y - 0.0170491 * z,\n\t\tz: -0.0092345 * x + 0.0150436 * y + 0.7521316 * z\n\t};\n\tif (alpha !== undefined) {\n\t\tres.alpha = alpha;\n\t}\n\treturn res;\n};\n\nexport default convertXyz65ToXyz50;\n","/*\n\tThe XYZ D65 color space\n\t-----------------------\n */\n\nimport convertXyz65ToRgb from './convertXyz65ToRgb.js';\nimport convertRgbToXyz65 from './convertRgbToXyz65.js';\n\nimport convertXyz65ToXyz50 from './convertXyz65ToXyz50.js';\nimport convertXyz50ToXyz65 from './convertXyz50ToXyz65.js';\n\nimport { interpolatorLinear } from '../interpolate/linear.js';\nimport { fixupAlpha } from '../fixup/alpha.js';\n\nconst definition = {\n\tmode: 'xyz65',\n\n\ttoMode: {\n\t\trgb: convertXyz65ToRgb,\n\t\txyz50: convertXyz65ToXyz50\n\t},\n\n\tfromMode: {\n\t\trgb: convertRgbToXyz65,\n\t\txyz50: convertXyz50ToXyz65\n\t},\n\n\tranges: {\n\t\tx: [0, 0.95],\n\t\ty: [0, 1],\n\t\tz: [0, 1.088]\n\t},\n\n\tchannels: ['x', 'y', 'z', 'alpha'],\n\n\tparse: ['xyz', 'xyz-d65', '--xyz-d65'],\n\tserialize: 'xyz-d65',\n\n\tinterpolate: {\n\t\tx: interpolatorLinear,\n\t\ty: interpolatorLinear,\n\t\tz: interpolatorLinear,\n\t\talpha: { use: interpolatorLinear, fixup: fixupAlpha }\n\t}\n};\n\nexport default definition;\n","import convertRgbToLrgb from '../lrgb/convertRgbToLrgb.js';\n\nconst convertRgbToYiq = rgb => {\n\tlet { r, g, b, alpha } = convertRgbToLrgb(rgb);\n\tlet res = {\n\t\tmode: 'yiq',\n\t\ty: 0.29889531 * r + 0.58662247 * g + 0.11448223 * b,\n\t\ti: 0.59597799 * r - 0.2741761 * g - 0.32180189 * b,\n\t\tq: 0.21147017 * r - 0.52261711 * g + 0.31114694 * b\n\t};\n\tif (alpha !== undefined) res.alpha = alpha;\n\treturn res;\n};\n\nexport default convertRgbToYiq;\n","import convertLrgbToRgb from '../lrgb/convertLrgbToRgb.js';\n\nconst convertYiqToRgb = ({ y, i, q, alpha }) =>\n\tconvertLrgbToRgb({\n\t\tr: y + 0.95608445 * i + 0.6208885 * q,\n\t\tg: y - 0.27137664 * i - 0.6486059 * q,\n\t\tb: y - 1.10561724 * i + 1.70250126 * q,\n\t\talpha\n\t});\n\nexport default convertYiqToRgb;\n","import convertRgbToYiq from './convertRgbToYiq.js';\nimport convertYiqToRgb from './convertYiqToRgb.js';\nimport { interpolatorLinear } from '../interpolate/linear.js';\nimport { fixupAlpha } from '../fixup/alpha.js';\n\n/*\n\tYIQ Color Space\n\n\tReferences\n\t----------\n\n\tWikipedia:\n\t\thttps://en.wikipedia.org/wiki/YIQ\n\n\t\"Measuring perceived color difference using YIQ NTSC\n\ttransmission color space in mobile applications\"\n\t\t\n\t\tby Yuriy Kotsarenko, Fernando Ramos in:\n\t\tProgramación Matemática y Software (2010) \n\n\tAvailable at:\n\t\t\n\t\thttp://www.progmat.uaem.mx:8080/artVol2Num2/Articulo3Vol2Num2.pdf\n */\n\nconst definition = {\n\tmode: 'yiq',\n\n\ttoMode: {\n\t\trgb: convertYiqToRgb\n\t},\n\n\tfromMode: {\n\t\trgb: convertRgbToYiq\n\t},\n\n\tchannels: ['y', 'i', 'q', 'alpha'],\n\n\tparse: ['--yiq'],\n\tserialize: '--yiq',\n\n\tranges: {\n\t\ti: [-0.595, 0.595],\n\t\tq: [-0.522, 0.522]\n\t},\n\n\tinterpolate: {\n\t\ty: interpolatorLinear,\n\t\ti: interpolatorLinear,\n\t\tq: interpolatorLinear,\n\t\talpha: { use: interpolatorLinear, fixup: fixupAlpha }\n\t}\n};\n\nexport default definition;\n"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","_slicedToArray","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","err","unsupportedIterableToArray","TypeError","_unsupportedIterableToArray","o","minLen","n","prototype","toString","slice","constructor","name","from","test","color","mode","undefined","parse","linearize","v","Math","pow","abs","sign","a98","r","g","b","res","x","y","z","alpha","gamma","definition","rgb","serialize","fromMode","convertXyz65ToA98","convertRgbToXyz65","xyz65","toMode","convertXyz65ToRgb","convertA98ToXyz65","averageAngle","val","sum","reduce","rad","PI","sin","cos","atan2","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","target_mode","prepare","converters","M","degToRad","radToDeg","h","s","l","amp","cosh","sinh","DE","BE","BCAD","sqrt","channels","ranges","convertRgbToCubehelix","convertCubehelixToRgb","interpolate","use","interpolatorLinear","fixup","fixupHueShorter","fixupAlpha","difference","differenceHueSaturation","average","convertDlabToLab65","c","convertDlchToLab65","convertLabToLch","convertLab65ToDlab","convertLchToLab","convertLab65ToDlch","lab65","convertLab65ToRgb","convertRgbToLab65","a","kE","kCH","θ","cosθ","sinθ","factor","log","exp","G","e","f","normalizeHue","dlab","differenceHueChroma","some_defined","map","hue","hues","fn","idx","normalized","acc","curr","d","convertHsiToRgb","floor","convertRgbToHsi","max","m","min","convertHslToRgb","m1","m2","convertRgbToHsl","parseHsl","hsl_old","RegExp","per","num_per","hsl_new","hue_none","per_none","num_per_none","match","hueToDeg","convertHsvToRgb","convertRgbToHsv","convertHwbToRgb","w","convertRgbToHwb","rgba","hsv","parseHwb","differenceHueNaive","hwb","t","interpolatorPiecewise","lerp","interpolator","classes","get_classes","cls","pair","convertJabToXyz65","d0","pq_inv","vp","rel","j","convertXyz65ToJab","pq","vn","xp","yp","convertRgbToJab","convertJabToRgb","jab","convertJchToJab","convertJabToJch","lab","convertLab65ToXyz65","k","fy","fz","Xn","Yn","Zn","convertXyz65ToLab65","cbrt","f0","f1","convertXyz50ToRgb","convertLabToXyz50","convertXyz50ToLab","convertRgbToXyz50","xyz50","convertLabToRgb","convertRgbToLab","parseLab","num_none","lch","parseLch","u","luv","convertLchuvToLuv","lchuv","convertLuvToXyz50","convertLuvToLchuv","convertXyz50ToLuv","convertLrgbToRgb","convertRgbToLrgb","un","v_fn","up","u_fn","isFinite","modes","parsers","colorProfiles","identity","useMode","channel","Error","parser","useParser","converter","getMode","indexOf","convertOkhslToOklab","hsl","toe_inv","ret","k_0","k_1","k_2","a_","b_","get_Cs","C_0","C_mid","C_max","C","convertOklabToOkhsl","toe","k_3","find_cusp","S_cusp","k0","k1","k2","k3","k4","wl","wm","ws","S","k_l","k_m","k_s","l_","m_","s_","compute_max_saturation","convertOklabToLrgb","L_cusp","get_ST_max","cusp","L","L1","C1","L0","dL","l_dt","m_dt","s_dt","ldt","mdt","sdt","ldt2","mdt2","sdt2","r1","u_r","t_r","g1","u_g","t_g","b1","u_b","t_b","find_gamut_intersection","ST_max","C_a","C_b","modeOkhsl","modeHsl","oklab","convertRgbToOklab","convertOklabToRgb","convertOkhsvToOklab","S_max","T","S_0","L_v","C_v","L_vt","C_vt","rgb_scale","scale_L","L_new","convertOklabToOkhsv","modeOkhsv","modeHsv","convertLrgbToOklab","lrgb","convertXyz65ToP3","convertP3ToXyz65","result","cm","split","cmp_string","rx_num_per_none","ch","components","parseColorSyntax","prophoto","convertXyz50ToProphoto","convertProphotoToXyz50","α","β","rec2020","convertXyz65ToRec2020","convertRec2020ToXyz65","parseHex","parseRgb","parseNamed","parseTransparent","hex","parseNumber","parseInt","named","toLowerCase","rgb_num_old","num","rgb_per_old","rgb_num_new","rgb_per_new","unit","convertXyz65ToXyz50","convertXyz50ToXyz65","q","convertYiqToRgb","convertRgbToYiq"],"sourceRoot":""}