{"version":3,"file":"static/js/396.dc5b6542.chunk.js","mappings":"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","sources":["db.js","colorsWorker.js","VallejoGame.js","VallejoModel.js","Citadel.js","ArmyPainter.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["import Dexie from 'dexie';\r\n\r\nexport const db = new Dexie('colors');\r\ndb.version(2).stores({\r\n  colors: '[collection+name+hex], collection, name, hex, owned, *bases'\r\n});\r\n\r\ndb.version(3).stores({\r\n  data: 'id'\r\n});\r\n","/* eslint-disable no-undef */\r\nimport vallejoGame from './VallejoGame';\r\nimport vallejoModel from './VallejoModel';\r\nimport citadel from './Citadel';\r\nimport armyPainter from './ArmyPainter';\r\nimport mixbox from 'mixbox';\r\nimport { db } from 'db.js';\r\nimport * as culori from 'culori';\r\n\r\nconst difference = culori.differenceCiede2000();\r\n\r\nvar colors = [];\r\n\r\nconst createColor = (collection, name, hex, owned) => {\r\n  const color = culori.lab65(hex);\r\n  const hsv = culori.hsv(color);\r\n\r\n  return {\r\n    collection: collection,\r\n    name: name,\r\n    hex: hex,\r\n    color: color,\r\n    H: Math.round(hsv.h || 0),\r\n    S: Math.round(hsv.s * 100),\r\n    V: Math.round(hsv.v * 100),\r\n    owned: owned\r\n  };\r\n};\r\n\r\nconst updateMinDelta = () => {\r\n  const baseColors = colors.filter((color) => color.collection !== 'Mix');\r\n  for (let color1 of baseColors) {\r\n    const deltas = baseColors\r\n      .filter((c) => c !== color1 && c.owned)\r\n      .map((color2) => {\r\n        const delta = Math.round(difference(color1.color, color2.color));\r\n        return delta;\r\n      });\r\n\r\n    color1.minDelta = Math.min(...deltas);\r\n  }\r\n};\r\n\r\nconst getCollection = (collection, data) => {\r\n  return data\r\n    .split('\\n')\r\n    .filter((s) => s)\r\n    .map((s) => {\r\n      const code = s.substring(s.indexOf('#'));\r\n      const name = s.substring(0, s.indexOf('#') - 1);\r\n      return createColor(collection, name, code, false);\r\n    });\r\n};\r\n\r\nconst colorToBase = (color) => {\r\n  return { collection: color.collection, name: color.name, hex: color.hex };\r\n};\r\n\r\n(async () => {\r\n  const savedColors = await db.data.get('colors');\r\n\r\n  if (savedColors) {\r\n    colors = JSON.parse(savedColors.data);\r\n    postMessage({ type: 'colorsUpdated', colors: colors });\r\n    return;\r\n  }\r\n\r\n  console.log('Starting generation');\r\n\r\n  colors = [];\r\n  let baseColors = [];\r\n  getCollection('Vallejo Game Colors', vallejoGame).forEach((c) =>\r\n    baseColors.push(c)\r\n  );\r\n  getCollection('Vallejo Model Colors', vallejoModel).forEach((c) =>\r\n    baseColors.push(c)\r\n  );\r\n  getCollection('Citadel', citadel).forEach((c) => baseColors.push(c));\r\n  getCollection('Army Painter', armyPainter).forEach((c) => baseColors.push(c));\r\n\r\n  baseColors.forEach((c) => colors.push(c));\r\n\r\n  let mixes = [];\r\n\r\n  const step = Math.ceil(baseColors.length / 100);\r\n\r\n  for (let i = 0; i < baseColors.length; i++) {\r\n    for (let j = i + 1; j < baseColors.length; j++) {\r\n      const ratios = [\r\n        { value: 0.25, name: '3 to 1' },\r\n        { value: 0.5, name: '1 to 1' },\r\n        { value: 0.75, name: '1 to 3' }\r\n      ];\r\n\r\n      for (const ratio of ratios) {\r\n        const mix = mixbox.lerp(\r\n          baseColors[i].hex,\r\n          baseColors[j].hex,\r\n          ratio.value\r\n        );\r\n        const code = culori.formatHex({\r\n          mode: 'rgb',\r\n          r: mix[0] / 256,\r\n          g: mix[1] / 256,\r\n          b: mix[2] / 256\r\n        });\r\n\r\n        const name =\r\n          baseColors[i].collection +\r\n          ' ' +\r\n          baseColors[i].name +\r\n          ' + ' +\r\n          baseColors[j].collection +\r\n          ' ' +\r\n          baseColors[j].name +\r\n          ' ' +\r\n          ratio.name;\r\n\r\n        const color = createColor('Mix', name, code, false);\r\n\r\n        mixes.push({\r\n          ...color,\r\n          bases: [colorToBase(baseColors[i]), colorToBase(baseColors[j])]\r\n        });\r\n      }\r\n    }\r\n\r\n    if (i % step == 0) {\r\n      postMessage({ type: 'progressUpdate', value: i / step });\r\n    }\r\n  }\r\n\r\n  colors.push(...mixes);\r\n\r\n  postMessage({ type: 'progressUpdate', value: 95 });\r\n\r\n  console.log('Saving colors', colors.length);\r\n  await db.data.put({ id: 'colors', data: JSON.stringify(colors) });\r\n  console.log('Saved colors');\r\n\r\n  postMessage({ type: 'progressUpdate', value: 100 });\r\n  postMessage({ type: 'colorsUpdated', colors: colors });\r\n})();\r\n\r\nself.onmessage = async (message) => {\r\n  if (message.data.type === 'updateOwned') {\r\n    postMessage({ type: 'progressUpdate', value: 0 });\r\n\r\n    const colorIndex = colors.findIndex(\r\n      (color) =>\r\n        color.collection === message.data.color.collection &&\r\n        color.name === message.data.color.name &&\r\n        color.hex === message.data.color.hex\r\n    );\r\n\r\n    colors[colorIndex].owned = message.data.color.owned;\r\n\r\n    const mixes = colors\r\n      .filter((color) => color.collection === 'Mix')\r\n      .filter((color) =>\r\n        color.bases.some(\r\n          (b) =>\r\n            b.collection === message.data.color.collection &&\r\n            b.name === message.data.color.name &&\r\n            b.hex === message.data.color.hex\r\n        )\r\n      );\r\n\r\n    mixes.forEach(\r\n      (color) =>\r\n        (color.owned = color.bases.every((base) => {\r\n          const baseIndex = colors.findIndex(\r\n            (color) =>\r\n              color.collection === base.collection &&\r\n              color.name === base.name &&\r\n              color.hex === base.hex\r\n          );\r\n\r\n          return colors[baseIndex].owned;\r\n        }))\r\n    );\r\n    updateMinDelta();\r\n\r\n    await db.data.put({ id: 'colors', data: JSON.stringify(colors) });\r\n    postMessage({ type: 'colorsUpdated', colors: colors });\r\n    postMessage({ type: 'progressUpdate', value: 100 });\r\n  }\r\n};\r\n","const vallejoGame = `Dead White #ffffff\r\nPale Flesh #f6bdb3\r\nElf Skintone #f8a070\r\nMoon Yellow #fff103\r\nSun Yellow #ffcf07\r\nGold Yellow #fdb318\r\nOrange Fire #f1652e\r\nHot Orange #e43027\r\nBloody Red #bf282e\r\nGory Red #810504\r\nScarlet Red #741330\r\nSquid Pink #da7fb5\r\nWarlord Purple #7d1a44\r\nHexed Lichen #34274d\r\nRoyal Purple #23264f\r\nDark Blue #2b265d\r\nStormy Night #1f1a4f\r\nNight Blue #19183f\r\nImperial Purple #211a4b\r\nMagic Blue #024381\r\nUltramarine Blue #373592\r\nElectric Blue #008cbf\r\nTurquoise #03676f\r\nFoul Green #239378\r\nJade Green #128379\r\nScurvy Green #09474e\r\nDark Green #083c2a\r\nSick Green #096638\r\nGoblin Green #23743c\r\nCamoflage Green #71753a\r\nScorpion Green #48b851\r\nLivery Green #9ece65\r\nBone White #e8be86\r\nDead Flesh #bcb686\r\nBronze Fleshtone #db945c\r\nFilthy Brown #f58d2b\r\nScrofulous Brown #d68030\r\nPlague Brown #cc9b34\r\nLeather Brown #7b5d2a\r\nDwarf Skin #cc7c67\r\nParasite Brown #b1481f\r\nBeasty Brown #55432d\r\nDark Fleshtone #4f2b26\r\nCharred Brown #39343b\r\nGhost Grey #a7c5db\r\nWolf Grey #90a2bc\r\nSombre Grey #4c5c7d\r\nStonewall Grey #828e95\r\nCold Grey #54646d\r\nBlack #000000\r\nKhaki #8c806d\r\nEarth #6f563d\r\nDesert Yellow #8e7845\r\nYellow Olive #063b2f\r\nTerracota #6b1306\r\nTan #9f4746\r\nCayman Green #285648\r\nSmokey Ink #2b2325\r\nGlacier Blue #acd0ee\r\nVerdigris #b3ceca\r\nPale Yellow #d5c179\r\nElfic Flesh #cdc29c\r\nCadmium Skin #fab78a\r\nRosy Flesh #f89e84\r\nOffwhite #f5f4da\r\nSteel Grey #64889d\r\nFluo Yellow #eeea50\r\nFluo Green #9dcd64\r\nMutation Green #296934\r\nScarletBlood Red #b72a38\r\nHeavy Skintone #aa7b62\r\nHeavy Red #943238\r\nHeavy Violet #4c2e65\r\nHeavy Blue #29556d\r\nHeavy Blue Grey #9ca7a7\r\nHeavy Grey #626d54\r\nHeavy Green #566840\r\nHeavy Black Green #18433d\r\nHeavy Warm Grey #939066\r\nHeavy Khaki #9d965d\r\nHeavy Ochre #a87536\r\nHeavy Gold Brown #ba8636\r\nHeavy Orange #ee5527\r\nHeavy Brown #705d41\r\nHeavy Sienna #744642\r\nHeavy Charcoal #1c2e2e\r\n`;\r\n\r\nexport default vallejoGame;\r\n","const vallejoModel = `Sunset Red #c22c5f\r\nBrown Rose #cf8774\r\nBeige Red #c79166\r\nGerman Orange #f05426\r\nGerman Yellow #e8e589\r\nOxford Blue #3a465f\r\nBlue Green #1a9496\r\nRoyal Blue #41558d\r\nRoyal Purple #4b2967\r\nBlue Violet #795c9a\r\nViolet Red #6b2946\r\nBurnt Cadmium Red #623535\r\nBasic Skintone #fbbc8c\r\nLuftwaffe Uniform WW2 #3d474f\r\nScarlet #da3630\r\nRed Leather #93453d\r\nIraqi Sand #b89972\r\nOffwhite #efeee2\r\nGerman Cam. Beige WW2 #9c8d70\r\nGerman Cam. Black Brown #5b3528\r\nLuftwaffe Cam. Green #596b3f\r\nGerman Cam. Orange Ochre #9d7e55\r\nGerman Cam. Pale Brown #82685e\r\nGerman Cam. Medium Brown #722b2f\r\nLime Green #6fae4e\r\nAmaranth Red #cc4338\r\nGerman Field Grey WW2 #595748\r\nGerman Cam. Bright Green #528944\r\nSalmon Rose #f89d87\r\nLondon Grey #4a555e\r\nPale Sand #d1c49c\r\nEmerald #00906a\r\nUltramarine #3b5da7\r\nLight Turquoise #0094a5\r\nAndrea Blue #008dc9\r\nCork Brown #a57b63\r\nDeep Sky Blue #00a6da\r\nSunny Skintone #f4b171\r\nMahogany Brown #804b47\r\nDark Sand #d6b779\r\nMedium Olive #226b2e\r\nBright Orange #f26833\r\nOchre Brown #a77237\r\nGolden Olive #78923b\r\nIce Yellow #feef87\r\nBlack Red [Cadmium Brown] #5f2e39\r\nMedium Fleshtone #c08245\r\nGlossy Black #010101\r\nBlack Grey #2d373a\r\nGrey Green #565a60\r\nDark Sea Green #2f4844\r\nBasalt Grey #576860\r\nMedium Sea Grey #869393\r\nLeather Brown #4a4639\r\nChocolate Brown #5f5047\r\nUS Field Drab #705d43\r\nTan Earth #9c7962\r\nBeige Brown #78584a\r\nBrown Sand #b08064\r\nGold Brown #ba8636\r\nGreen Brown #8d7b55\r\nKhaki Grey #8b7f5d\r\nYellow Green 1 #91864b\r\nMiddlestone #9c9660\r\nSilver Grey #d8dfd5\r\nStone Grey #959980\r\nPastel Green #a4bb99\r\nGreen Grey #827e61\r\nBrown Violet #4e5d4d\r\nOlive Grey #39584f\r\nUSA Olive Drab #3b4947\r\nReflective Green #496244\r\nIntermediate Green #49944f\r\nYellow Olive #26392e\r\nUS Dark Green #5b6955\r\nCam. Olive Green #3c5549\r\nGunship Green #3d685e\r\nGerman Cam. Extra Dark Green #30504a\r\nBronce Green #2a534f\r\nDark Sea Blue #2a4048\r\nDark Prussian Blue #192c43\r\nFrench Mirage Blue #557880\r\nPastel Blue #67859b\r\nAzure #717cad\r\nIntermediate Blue #607a80\r\nDark Blue Grey #5c7476\r\nBlue Grey Pale #9ea7a5\r\nPale Blue #83b5b2\r\nPale Grey Blue #bacdd0\r\nCarmine Red #b73035\r\nVermillion #d22b2d\r\nOrange Red #e34c26\r\nLight Orange #f68627\r\nTan Yellow #b5915d\r\nYellow Ochre #c19448\r\nGreen Ochre #a98969\r\nDeep Yellow #ffe30c\r\nSand Yellow #d7bf75\r\nBeige #dbc58e\r\nIvory #eff1d9\r\nGerman Uniform #286254\r\nEnglish Uniform #715833\r\nUniform Green #577a38\r\nJapan Uniform WW2 #998546\r\nRussian Uniform WW2 #606d53\r\nBlue #043667\r\nRed #91323a\r\nDark Flesh #d9a262\r\nLight Flesh #feedd0\r\nLight Brown #bf764e\r\nDark Blue #0d5a86\r\nSaddle Brown #89584f\r\nBurnt Umber #665148\r\nLight Green #00a850\r\nGrey Blue #45708d\r\nOld Rose #d47b7d\r\nMagenta #a92a56\r\nDark Red #a24a46\r\nGolden Yellow #f7c65e\r\nLight Yellow #f7ea62\r\nBlack #252b31\r\nWhite #ffffff\r\nLemon Yellow #fef10e\r\nFlat Yellow #ffcd25\r\nYellow Green 2 #d9e02a\r\nFlat Flesh #d8a977\r\nClear Orange #f1552c\r\nFlat Red #aa3037\r\nPink #d37497\r\nPurple #834a6c\r\nViolet #4b2f65\r\nSky Blue #86d6f7\r\nFlat Blue #336991\r\nMedium Blue #066588\r\nField Blue #436872\r\nPrussian Blue #2a546e\r\nTurquoise #008e9c\r\nOlive Green #6a8b3a\r\nFlat Green #2a6531\r\nPark Green Flat #008c5d\r\nDeep Green #0a6b48\r\nGrey Grey #aecbbb\r\nLight Green Blue #6d9a95\r\nLight Sea Grey #97b4b5\r\nGreen Sky #59ad84\r\nMilitary Green #3e5848\r\nBuff #d2ca9f\r\nDesert Yellow #b19151\r\nDark Yellow #9d9059\r\nGerman Cam. Dark Green #2f4845\r\nBlack Green #19423e\r\nOrange Brown #b86f44\r\nCavalry Brown #853f3d\r\nFlat Earth #87643c\r\nFlat Brown #764841\r\nHull Red #522724\r\nDeck Tan #bec5b3\r\nMedium Grey #909b85\r\nKhaki #969163\r\nSky Grey #b3b6b2\r\nLight Grey #949c9a\r\nDark Sea Grey #787d7a\r\nNeutral Grey #64767a\r\nWhite Grey #eef1ec\r\nDark Grey #233e3d\r\nGerman Grey #192f30\r\n`;\r\n\r\nexport default vallejoModel;\r\n","const citadel = `Ceramite White Base Layer #ffffff\r\nWhite Scar Base Layer #ffffff\r\nAverland Sunset Base Layer #fbba00\r\nYriel Yellow Base Layer #ffda00\r\nFlash Gitz Yellow Base Layer #ffee00\r\nJokaero Orange Base Layer #e6200f\r\nTroll Slayer Orange Base Layer #eb641b\r\nFire Dragon Bright Base Layer #f1844a\r\nMephiston Red Base Layer #9b0e05\r\nEvil Suns Scarlet Base Layer #c00b0c\r\nWild Rider Red Base Layer #e21516\r\nKhorne Red Base Layer #6a0a01\r\nWazdakka Red Base Layer #8d0d01\r\nSquig Orange Base Layer #b04d3e\r\nScreamer Pink Base Layer #831740\r\nPink Horror Base Layer #96325c\r\nEmperors Children Base Layer #bd3f75\r\nNaggaroth Night Base Layer #433656\r\nXereus Purple Base Layer #4b205c\r\nGenestealer Purple Base Layer #7c5ca4\r\nDaemonette Hide Base Layer #696685\r\nWarpfiend Grey Base Layer #6B6A74\r\nSlaanesh Grey Base Layer #8E8C97\r\nKantor Blue Base Layer #06234f\r\nAlaitoc Blue Base Layer #2e5689\r\nHoeth Blue Base Layer #4f7fb5\r\nMacragge Blue Base Layer #14397a\r\nAltdorf Guard Blue Base Layer #274b9b\r\nCalgar Blue Base Layer #456eb5\r\nCaledor Sky Base Layer #38689c\r\nTeclis Blue Base Layer #387bbf\r\nLothern Blue Base Layer #3ba1d1\r\nThousand Sons Blue Base Layer #18ABCC\r\nAhriman Blue Base Layer #1F8C9C\r\nThe Fang Base Layer #457479\r\nRuss Grey Base Layer #55768a\r\nFenrisian Grey Base Layer #789ebb\r\nStegadon Scale Green Base Layer #004261\r\nSotek Green Base Layer #056976\r\nTemple Guard Blue Base Layer #35998e\r\nThunderhawk Blue Base Layer #417074\r\nIncubi Darkness Base Layer #094345\r\nKabalite Green Base Layer #008660\r\nSybarite Green Base Layer #36a062\r\nCaliban Green Base Layer #003b1d\r\nWarpstone Glow Base Layer #257326\r\nMoot Green Base Layer #57aa2d\r\nWaaagh! Flesh Base Layer #275627\r\nWarboss Green Base Layer #3b7d54\r\nSkarsnik Green Base Layer #5e9067\r\nCastellan Green Base Layer #384d20\r\nDeath World Forest Base Layer #666c2d\r\nLoren Forest Base Layer #5b7426\r\nStraken Green Base Layer #6e8611\r\nNurgling Green Base Layer #90a15f\r\nElysian Green Base Layer #81932e\r\nOgryn Camo Base Layer #a9af42\r\nZandri Dust Base Layer #a89758\r\nUshabti Bone Base Layer #c6c180\r\nScreaming Skull Base Layer #d9d8a6\r\nFlayed One Flesh Base Layer #f3ca8a\r\nSteel Legion Drab Base Layer #695634\r\nTallarn Sand Base Layer #ab7d00\r\nKarak Stone Base Layer #c1a069\r\nBugmans Glow Base Layer #8c5144\r\nCadian Fleshtone Base Layer #cb7953\r\nKislev Flesh Base Layer #dbad75\r\nRatskin Flesh Base Layer #AD6B4C\r\nBestigor Flesh Base Layer #D38A57\r\nUngor Flesh Base Layer #dbac63\r\nMournfang Brown Base Layer #681104\r\nSkrag Brown Base Layer #954b00\r\nDeathclaw Brown Base Layer #ba6952\r\nXV-88 Base Layer #7b4d1c\r\nTau Light Ochre Base Layer #c26e02\r\nBalor Brown Base Layer #915e02\r\nZamesi Desert Base Layer #e0a503\r\nRhinox Hide Base Layer #4e3433\r\nDoombull Brown Base Layer #5e0605\r\nTuskgor Fur Base Layer #8e3734\r\nDryad Bark Base Layer #3b342e\r\nGorthor Brown Base Layer #6e4e46\r\nBaneblade Brown Base Layer #99826b\r\nMechanicus Standard Grey Base Layer #454e50\r\nDawnstone Base Layer #7b7e74\r\nAdministratum Grey Base Layer #9da299\r\nCelestra Grey Base Layer #9caeae\r\nUlthuan Grey Base Layer #d2e4df\r\nRakarth Flesh Base Layer #aba495\r\nPallid Wych Flesh Base Layer #d6d5c4\r\nAbaddon Black Base Layer #010100\r\nEshin Grey Base Layer #535659\r\nSkavenblight Dinge Base Layer #4f4840\r\nStormvermin Fur Base Layer #7d736a\r\nDark Reaper Base Layer #3B5150\r\nDeath Guard Armor Base Layer #848A66\r\nBaharroth Blue Edge #58C1CD\r\nBlue Horror Edge #A2BAD2\r\nDechala Lilac Edge #B69FCC\r\nDorn Yellow Edge #FFF200\r\nFulgrim Pink Edge #F4AFCD\r\nGauss Blaster Green Edge #84C3AA\r\nKrieg Khaki Edge #C0BD81\r\nLugganath Orange Edge #F79E86\r\n`;\r\n\r\nexport default citadel;\r\n","const armyPainter = `Army Painter #231f20\r\nMatt White #ffffff\r\nPure Red #cf2127\r\nDragon Red #9a1b1e\r\nLava Orange #e65525\r\nDaemonic Yellow #fada06\r\nNecrotic Flesh #bfc292\r\nGoblin Green #348941\r\nArmy Green #6e7645\r\nGreenskin #136232\r\nAngel Green #0c391d\r\nElectric Blue #508cbe\r\nCrystal Blue #0083c2\r\nUltramarine Blue #0f4e85\r\nDeep Blue #083251\r\nAsh Grey #a2a5a4\r\nUniform Grey #5e6a73\r\nWolf Grey #5b8093\r\nMonster Brown #855c2a\r\nDesert Yellow #c7952c\r\nFur Brown #a14322\r\nLeather Brown #764823\r\nOak Brown #432010\r\nSkeleton Bone #d3c89d\r\nBarbarian Flesh #e89c6c\r\nTanned Flesh #bc745e\r\nAlien Purple #50317b\r\nHydra Turquoise #199ba3\r\nChaotic Red #6c1e10\r\nAbomination Gore #6c1e10\r\nArid Earth #faecc3\r\nBabe Blonde #f8dd0d\r\nBanshee Brown #c3b097\r\nBasilisk Brown #cd8315\r\nBrainmatter Beige #f1f0e0\r\nCastle Grey #f1f0e0\r\nCentaur Skin #deaba0\r\nCombat Fatigue #878e5c\r\nCommando Green #827b39\r\nCorpse Pale #edccad\r\nCrusted Sore #611624\r\nCrypt Wraith #606050\r\nCultist Robe #756e60\r\nDark Sky #2b4b5f\r\nDirt Spatter #5e3827\r\nDrake Tooth #cfcbb4\r\nDungeon Grey #686c71\r\nElemental Bolt #009a82\r\nElf Green #495122\r\nElven Flesh #495122\r\nOrc Blood #925f6e\r\nFilthy Cape #7c7863\r\nDark Stone #605752\r\nFire Lizard #d67128\r\nFog Grey #6c8fac\r\nGorgon Hide #c7d2e4\r\nGriffon Blue #215383\r\nHardened Carapace #4c473f\r\nHemp Rope #94763a\r\nIce Storm #639ec9\r\nJungle Green #88ac2e\r\nKobold Skin #c9a484\r\nKraken Skin #71c591\r\nMars Red #b73b37\r\nToxic Mist #39c0c5\r\nMoon Dust #e8d468\r\nMouldy Clothes #447b3a\r\nMummy Robes #ebded5\r\nMutant Hue #a58084\r\nMythical Orange #e73d24\r\nNecromance Cloak #3c3d37\r\nGrimoire Purple #805259\r\nOozing Purple #aa94b4\r\nPhoenix Flames #faa61a\r\nPixie Pink #d47a83\r\nPoisonous Cloud #cdde4a\r\nRoyal Cloak #15999c\r\nScaly Hide #859852\r\nWarlock Purple #bb5b64\r\nVoidshield Blue #2ca2d9\r\nSnake Scales #8ab239\r\nSpaceship Exterior #cdced0\r\nStone Golem #b9bab7\r\nSulphide Ochre #c68512\r\nToxic Boils #a67284\r\nTroglodyte Blue #0889ba\r\nTroll Claws #cb8b4e\r\nVampire Red #981d34\r\nVenom Wyrm #6a653e\r\nViking Blue #00609a\r\nWasteland Soil #774b58\r\nWerewolf Fur #785e4e\r\nWitch Brew #92963e\r\nWizards Orb #00726a\r\nScar Tissue #ca8772\r\nField Grey #787c78`;\r\n\r\nexport default armyPainter;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [181], function() { return __webpack_require__(396); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"f4c57951\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/ColorAssistant/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t396: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkcolor_assistant\"] = self[\"webpackChunkcolor_assistant\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn __webpack_require__.e(181).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["db","Dexie","version","stores","colors","data","difference","culori","createColor","collection","name","hex","owned","color","hsv","H","Math","round","h","S","s","V","v","updateMinDelta","baseColors","filter","color1","deltas","c","map","color2","minDelta","min","getCollection","split","code","substring","indexOf","colorToBase","get","savedColors","JSON","parse","postMessage","type","console","log","forEach","push","mixes","step","ceil","length","i","j","value","ratio","mix","mixbox","mode","r","g","b","bases","put","id","stringify","self","onmessage","message","colorIndex","findIndex","some","every","base","baseIndex","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","x","__webpack_exports__","O","deferred","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","keys","key","splice","d","definition","o","defineProperty","enumerable","f","e","chunkId","Promise","all","reduce","promises","u","miniCssF","obj","prop","prototype","hasOwnProperty","call","p","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop","next","then"],"sourceRoot":""}